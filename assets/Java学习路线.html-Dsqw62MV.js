import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,e as i,a,b as l,o as s}from"./app-C4-AlyRZ.js";const n="/VinciGeek/assets/1717575419804-BWPkjRJd.png",o={},h=a('<h1 id="java学习路线" tabindex="-1"><a class="header-anchor" href="#java学习路线"><span>Java学习路线</span></a></h1><div class="hint-container note"><p class="hint-container-title">注</p><p>Java 学习路线一条龙版 by 程序员鱼皮 为方便查看转载，若有侵权请联系本人删除。</p></div><p>转自鱼皮 💂 + 💻 = 👴🏽</p><p>建议先观看视频导读：https://www.bilibili.com/video/BV1Qf4y1K7ff/</p><h2 id="大纲" tabindex="-1"><a class="header-anchor" href="#大纲"><span>大纲</span></a></h2><p><img src="'+n+'" alt="1717575419804" loading="lazy">路线特点</p><ol><li>最新，完整一条龙的大厂 Java 学习路线，从入门到入土</li><li>同时适用于想全面学习 / 快速求职的同学，可以根据符号来定制自己的专属学习路线</li><li>给出目标、学习建议、关键知识点、最优资源以及各类资源推荐（视频、书籍、文档、项目、工具等）</li><li>鱼皮自己是 Java 开发者，融入个人自学和从业的经历 + 思考，让路线有灵魂</li><li>划分阶段、更有计划，且在最后给出持续学习的方向、探索 Java 程序员发展的无限可能</li><li>完全开源，回馈社区，持续更新！</li></ol><h2 id="符号表" tabindex="-1"><a class="header-anchor" href="#符号表"><span>符号表</span></a></h2><p>可以通过路线知识点前的表情字符，根据自己的实际情况选择学习：</p><ul><li>🌕 所有同学必须学习！！！</li><li>🌖 非常急着找工作，才可不学；目标大厂，必须学习！</li><li>🌗 急着找工作的话，可不学；目标大厂，建议学习</li><li>🌘 时间充足的话，再去学</li><li>⭐ 表示推荐资源</li></ul><h2 id="写在开头" tabindex="-1"><a class="header-anchor" href="#写在开头"><span>写在开头</span></a></h2><p>首先呢，我们要了解 Java 的应用场景和就业方向，看看和自己的学习目的是否一致。</p><p>目前，Java 由于其优秀的特性以及火爆的生态，岗位需求量大，是后台开发、安卓开发、大数据开发的主流编程语言，因此学习资源也很丰富，值得学习！</p><p>有关更多编程语言的选择，大家可以看我的视频了解：https://www.bilibili.com/video/BV1y3411r7pX/</p><h2 id="阶段-0-前期准备" tabindex="-1"><a class="header-anchor" href="#阶段-0-前期准备"><span>阶段 0：前期准备</span></a></h2><ol><li>准备好一款在线、随时随地写代码的工具，不用在本地去安装和配置，是初学者的好帮手。</li></ol><ul> 1. 推荐网站 - 菜鸟工具：https://c.runoob.com/compile/10 </ul>',17),c=l("ul",null," 3. 推荐本地软件 Typora：https://www.typora.io/（线上可以用 xx 文档） 3. 推荐使用 Markdown 语法编写，鱼皮教程：https://www.bilibili.com/video/BV1no4y1k7YT/ ",-1),p=a('<h2 id="阶段-1-java-入门" tabindex="-1"><a class="header-anchor" href="#阶段-1-java-入门"><span>阶段 1：Java 入门</span></a></h2><h3 id="目标" tabindex="-1"><a class="header-anchor" href="#目标"><span>目标</span></a></h3><p>培养兴趣、快速上手，能运行和编写简单的 Java 程序。</p><p>学完本阶段后，可以试着用 Java 解决一些数学计算问题、编写图书管理系统等桌面端 GUI 程序，甚至是五子棋之类的小游戏。</p><h3 id="🌕-java-编程基础-45-天" tabindex="-1"><a class="header-anchor" href="#🌕-java-编程基础-45-天"><span>🌕 Java 编程基础（45 天）</span></a></h3><h4 id="知识" tabindex="-1"><a class="header-anchor" href="#知识"><span>知识</span></a></h4><ul><li>Java 特点（看不懂没事，别背！）</li><li>环境搭建</li><li>IDEA 开发工具</li></ul><ul> - 新建项目 - 运行调试 - 界面配置 - 插件管理 </ul>',8),u=l("ul",null," - 数据类型 - 流程控制 ",-1),r=l("ul",null," - 方法 - 重载 - 封装 - 继承 - 多态 ",-1),d=l("ul",null," - String - 日期时间 ",-1),b=a('<h4 id="学习建议" tabindex="-1"><a class="header-anchor" href="#学习建议"><span>学习建议</span></a></h4><p>初学一门语言时，一定要持续学习，不能中断！</p><p>想要学好编程，一定要多敲代码！建议先跟着书上的例子敲一遍代码，然后试着自主编写代码，并完成课后练习。</p><p>不理解代码也没关系，可以学习 Debug 后，一行一行地打断点执行，查看程序的执行过程。千万不要觉得麻烦，养成习惯后真的能节省很多重复学习的时间。</p><h4 id="经典面试题" tabindex="-1"><a class="header-anchor" href="#经典面试题"><span>经典面试题</span></a></h4><ol><li>为什么重写 equals 还要重写 hashcode？</li><li>== 和 equals 比较的区别</li><li>为啥有时会出现 4.0 - 3.6 = 0.40000001 这种现象？</li><li>final 关键字的作用</li><li>介绍 Java 的集合类</li><li>ArrayList 和 LinkedList 的区别</li></ol><h4 id="资源" tabindex="-1"><a class="header-anchor" href="#资源"><span>资源</span></a></h4><ul><li>视频</li></ul><ul> - ⭐ 韩顺平 - 零基础 30 天学会 Java：https://www.bilibili.com/video/BV1fh411y7R8（900 多集，顺序安排很合理，每个知识真正的打碎了，通俗、有示例、有实战、有思想） </ul>',9),g=l("ul",null," - ⭐ 菜鸟教程：https://www.runoob.com/java/java-tutorial.html（可以在线练习） - 廖雪峰 Java 教程：https://www.liaoxuefeng.com/wiki/1252599548343744 - IDEA 中文教程：https://github.com/judasn/IntelliJ-IDEA-Tutorial - IDEA Mac 快捷键指南，地址：https://www.jianshu.com/p/454c71172c46 - IDEA Win 常用快捷键，地址：https://www.jianshu.com/p/5de7cca0fefc ",-1),m=l("ul",null," - 《Head First Java》 ",-1),w=a('<ul> - Codegym：https://codegym.cc/zh（玩玩前几关培养兴趣不错，但后面收费了） </ul><h3 id="🌖-java-8-3-天" tabindex="-1"><a class="header-anchor" href="#🌖-java-8-3-天"><span>🌖 Java 8（3 天）</span></a></h3><h4 id="知识-1" tabindex="-1"><a class="header-anchor" href="#知识-1"><span>知识</span></a></h4><ul><li>Stream API</li><li>Lambda 表达式</li><li>新日期时间 API</li><li>接口默认方法</li></ul><h4 id="学习建议-1" tabindex="-1"><a class="header-anchor" href="#学习建议-1"><span>学习建议</span></a></h4><p>Java 8 是如今企业开发中最主流的 Java 稳定版本，在这个版本出现了很多实用的新特性，虽然面试考点不多，但能够提升编程效率，建议学习。</p><h4 id="经典面试题-1" tabindex="-1"><a class="header-anchor" href="#经典面试题-1"><span>经典面试题</span></a></h4><ol><li>java 8 有哪些新特性？</li><li>HashMap 在 jdk 1.7 和 1.8 的区别？</li></ol><h4 id="资源-1" tabindex="-1"><a class="header-anchor" href="#资源-1"><span>资源</span></a></h4><ul><li>视频</li></ul><ul> - ⭐ 宋红康 - 全网最全Java零基础入门教程：https://www.bilibili.com/video/BV1Kb411W75N（只看 Java 8 部分即可） </ul>',11),_=l("ul",null," - ⭐ 菜鸟教程：https://www.runoob.com/java/java8-new-features.html ",-1),v=l("ul",null," - 《Java 8 实战》 ",-1),f=l("ul",null," - ⭐ 在线编写运行 Java 8：https://www.tutorialspoint.com/compile_java8_online.php ",-1),x=a('<ul> - Java 8 小代码片段：https://github.com/biezhi/30-seconds-of-java8 </ul><h3 id="练手项目" tabindex="-1"><a class="header-anchor" href="#练手项目"><span>练手项目</span></a></h3><ul><li>Java 实现简单计算器：https://www.lanqiao.cn/courses/185</li><li>Eclipse 实现 Java 编辑器：https://www.lanqiao.cn/courses/287</li><li>一本糊涂账：https://how2j.cn/module/104.html</li><li>Java 五子棋：https://blog.csdn.net/cnlht/article/details/8176130</li><li>Java 中国象棋：https://blog.csdn.net/cnlht/article/details/8205733</li><li>JAVA GUI 图书馆管理系统：https://github.com/uboger/LibraryManager</li><li>JAVA 坦克大战小游戏：https://github.com/wangzhengyi/TankWar</li><li>Swing 编写的俄罗斯方块：https://github.com/HelloClyde/Tetris-Swing</li><li>小小记账本：https://github.com/xenv/SmallAccount（适合了解数据库的同学）</li></ul><h3 id="尾声" tabindex="-1"><a class="header-anchor" href="#尾声"><span>尾声</span></a></h3><p>学完了 Java 基础后，有些同学会感到迷茫了啊，感觉好像啥也做不出来，不知道下一步做什么，我这一身的本领该如何施展啊？</p><p>不要慌，也不要急着去学新技术，接下来我们要多用 Java 来写代码了，巩固基础，但是写什么呢？</p><p>当然是数据结构和算法！</p><h2 id="阶段-2-巩固基础" tabindex="-1"><a class="header-anchor" href="#阶段-2-巩固基础"><span>阶段 2：巩固基础</span></a></h2><h3 id="目标-1" tabindex="-1"><a class="header-anchor" href="#目标-1"><span>目标</span></a></h3><p>想学好编程，计算机基础知识要学好。</p><p>比如算法，是程序员的灵魂。学好算法有助于我们理解程序、开拓思路，因此也是很多公司面试时考察的关键，在找工作前，还是要刷个上百道算法题目的。</p><p>我们这个阶段的目标是：熟练使用 Java 语言来编写程序，巩固 Java 基础。（那直接用 Java 来写算法题目，一举两得，岂不美哉？）</p><p>此外，建议大家利用零碎时间多去了解 <strong>计算机基础知识</strong> ，比如操作系统、计算机网络等，对你后面学习开发框架之类的知识都有帮助。</p><h3 id="java-基础-30-天" tabindex="-1"><a class="header-anchor" href="#java-基础-30-天"><span>Java 基础（30 天）</span></a></h3><h4 id="学习建议-2" tabindex="-1"><a class="header-anchor" href="#学习建议-2"><span>学习建议</span></a></h4><p>建议大家去阅读 《Java 核心技术卷 1》，这本书堪称经典，是帮助你复习巩固 Java 的不二之选，其中图形界面章节可以选择不看。</p><p>之后可以刷牛客的 Java 练习题，检验自己的水平，我当时刷了两遍 1000 题（每天 30 题，1 个月也就刷完了，二刷会更快！）。虽然都是选择题，但能学到很多 Java 语言的特性、避免写代码时容易犯的错误。</p><p>如果你时间不够，只是想快速找到工作，那么本章节甚至可以完全跳过，后面慢慢弥补即可。</p><h4 id="资源-2" tabindex="-1"><a class="header-anchor" href="#资源-2"><span>资源</span></a></h4><ul><li>书籍</li></ul><ul> - ⭐《Java 核心技术卷 1》 </ul>',21),j=l("ul",null," - ⭐ 牛客题库：https://www.nowcoder.com/intelligentTest ",-1),J=l("h3",{id:"🌖-数据结构与算法",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#🌖-数据结构与算法"},[l("span",null,"🌖 数据结构与算法")])],-1),S=l("h4",{id:"知识-2",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#知识-2"},[l("span",null,"知识")])],-1),y=l("ul",null,[l("li",null,"时间 / 空间复杂度分析"),l("li",null,"数据结构")],-1),k=l("ul",null,[i(" - 数组 - 字符串 - 队列 - 栈 - 链表 - 集合 - 哈希表 - 树 "),l("ul",null," - 二叉树 - 多叉树 - 字典树 ")],-1),B=a('<ul> - 排序 - 双指针 - 查找 - 分治 - 动态规划 - 递归 - 回溯 - 贪心 - 位运算 - DFS - BFS - 图 </ul><h4 id="学习建议-3" tabindex="-1"><a class="header-anchor" href="#学习建议-3"><span>学习建议</span></a></h4><p>学算法一定要多思考、多练习！！！</p><p>在复习 Java、巩固基础的过程中，每天可以坚持用 Java 做 2 - 3 道算法题目。</p><p>不用担心看不懂，直接进入 LeetCode 学习板块 LeetBook，提供了免费的教程，文字、图解、动画讲算法、在线练习应有尽有，从 0 开始，跟着学习基础知识、跟着教程刷一些同类题目，培养算法思路。</p><p>之后再由简单到复杂、由通过率高到低，自主刷题，多看题解，举一反三。一定要把自己做过的每道题目代码都自行保存好，定期复习。时间足够的话，也可以试着自己写写题解，在网上分享一下自己的刷题思路，找到自己坚持的动力。</p><p>有条件的朋友也可以试着参与竞赛，没什么门槛，可以帮助你集中精神，而且周赛的题目还是挺友好的~</p><h4 id="经典面试题-2" tabindex="-1"><a class="header-anchor" href="#经典面试题-2"><span>经典面试题</span></a></h4><ul><li>LeetCode 精选 100 道：https://leetcode-cn.com/problem-list/2cktkvj/</li><li>LeetCode 精选算法 200 题：https://leetcode-cn.com/problem-list/qg88wci/</li></ul><h4 id="资源-3" tabindex="-1"><a class="header-anchor" href="#资源-3"><span>资源</span></a></h4><ul><li>文章</li></ul><ul> - ⭐ 刷了 1000 多道算法题，一点心得：https://t.1yb.co/oT9q（鱼皮原创） </ul>',12),C=l("ul",null," - ⭐ LeetCode LeetBook：https://leetcode-cn.com/leetbook/ ",-1),M=l("ul",null," - ⭐ LeetCode：https://leetcode-cn.com/ ",-1),V=l("ul",null," - ⭐《小灰的漫画算法》 - ⭐《剑指 Offer》 - 《程序员代码面试指南》 - 图解算法数据结构：https://leetcode-cn.com/leetbook/detail/illustration-of-algorithm/ - LeetCode 101（C++）：https://github.com/changgyhub/leetcode_101 - LeetCode 题解（C++）：https://github.com/soulmachine/leetcode - LeetCode Cookbook（Go 语言）：https://github.com/halfrost/LeetCode-Go ",-1),A=l("ul",null," - 尚硅谷 Java 数据结构与算法：https://www.bilibili.com/video/BV1E4411H73v（难度比面试的要求大一些，适合希望更全面学习的朋友） - Leetcode 真题解析：https://www.bilibili.com/video/BV1a54y1b74k ",-1),D=l("ul",null," - VisuAlgo 数据结构和算法动态可视化：https://visualgo.net/zh - 数据结构可视化：https://www.cs.usfca.edu/~galles/visualization/Algorithms.html - RegExr：https://www.code-nav.cn/rd/?rid=79550af2601114e9012110711798772b（学习、创建和测试正则表达式的在线可视化工具） ",-1),L=a('<ul> - 五分钟学算法：https://www.cxyxiaowu.com/ </ul><h3 id="🌘-计算机导论" tabindex="-1"><a class="header-anchor" href="#🌘-计算机导论"><span>🌘 计算机导论</span></a></h3><h4 id="知识-3" tabindex="-1"><a class="header-anchor" href="#知识-3"><span>知识</span></a></h4><ul><li>计算机发展历史</li><li>计算机应用领域</li><li>计算机发展方向</li><li>计算机基本组成</li><li>二进制</li><li>编程语言发展</li></ul><h4 id="学习建议-4" tabindex="-1"><a class="header-anchor" href="#学习建议-4"><span>学习建议</span></a></h4><p>大学计算机专业的同学一般刚开学就会上这门课，虽说学习它并不会直接提高你的编程技能，但能够让你更了解计算机和编程，从而在一定程度上帮助你培养学习兴趣、确定学习方向。</p><p>自学的话，不用刻意去学习计算机导论，而是可以通过看视频、阅读课外读物的方式慢慢地了解计算机的故事。</p><h4 id="资源-4" tabindex="-1"><a class="header-anchor" href="#资源-4"><span>资源</span></a></h4><ul><li>视频</li></ul><ul> - 《计算机科学速成课》：https://www.bilibili.com/video/BV1EW411u7th（从底层到上层的计算机知识科普，强烈推荐） </ul>',10),P=a('<ul> - 《半小时漫画计算机》 </ul><h3 id="🌖-操作系统" tabindex="-1"><a class="header-anchor" href="#🌖-操作系统"><span>🌖 操作系统</span></a></h3><h4 id="知识-4" tabindex="-1"><a class="header-anchor" href="#知识-4"><span>知识</span></a></h4><ul><li>操作系统的组成</li><li>进程、线程</li><li>进程 / 线程间通讯方式</li><li>进程调度算法</li><li>进程 / 线程同步方式</li><li>进程 / 线程状态</li><li>死锁</li><li>内存管理</li><li>局部性原理</li></ul><h4 id="学习建议-5" tabindex="-1"><a class="header-anchor" href="#学习建议-5"><span>学习建议</span></a></h4><p>说实话，操作系统这一块知识挺枯燥的。你说说我现在项目都不会做，你又让我看这些理论，是不是想让我头秃？</p><p>我的建议是，可以先利用课余时间看一些网课或者有趣的课外书，对一些操作系统的概念先有个大致的印象，比如进程、线程、死锁，等后面有时间了再系统学习、等到找工作了再去背相关八股文。</p><p>还在校园就跟着学校的进度学习就成，自学的话可以看下《清华操作系统原理》视频，有实力的小伙伴，能看懂大黑书就更好了，但如果看不懂也别担心，这并不影响你后续知识的学习。</p><h4 id="经典面试题-3" tabindex="-1"><a class="header-anchor" href="#经典面试题-3"><span>经典面试题</span></a></h4><ol><li>什么是死锁？死锁产生的条件？</li><li>线程有哪几种状态？</li><li>有哪些进程调度算法？</li><li>什么是缓冲区溢出？</li></ol><h4 id="资源-5" tabindex="-1"><a class="header-anchor" href="#资源-5"><span>资源</span></a></h4><ul><li>视频</li></ul><ul> - 《清华操作系统原理》：https://www.bilibili.com/video/BV1uW411f72n </ul>',13),I=l("ul",null," - 《编码》 - 《30天自制操作系统》 - 《现代操作系统》（难度较大，不推荐新手看） - 《深入理解计算机系统》（难度较大，不推荐新手看） - 《 自己动手写操作系统》（国产好书，网上可以下载） ",-1),T=a('<ul> - 浙大操作系统：https://github.com/QSCTech/zju-icicles </ul><h3 id="🌖-计算机网络" tabindex="-1"><a class="header-anchor" href="#🌖-计算机网络"><span>🌖 计算机网络</span></a></h3><h4 id="知识-5" tabindex="-1"><a class="header-anchor" href="#知识-5"><span>知识</span></a></h4><ul><li>网络分层模型</li><li>网络传输过程</li><li>IP、端口</li><li>HTTP / HTTPS 协议</li><li>UDP / TCP 协议</li><li>ARP 地址解析协议</li><li>网络安全</li><li>DNS 域名解析</li></ul><h4 id="学习建议-6" tabindex="-1"><a class="header-anchor" href="#学习建议-6"><span>学习建议</span></a></h4><p>很多学习 Java 开发的同学最后都是从事 <strong>后端开发</strong> 的工作，而计算机网络知识是后端开发的重点。</p><p>和操作系统一样，自学网络可能会很枯燥，建议先看有趣的课外书，比如《图解 HTTP》；或者有趣的视频，比如《计算机网络微课堂》。后面要找工作面试前，再重点去背一些八股文就好了。还在学校的同学好好上课一般就没问题。</p><p>学习基础能帮助自己今后发展更稳定，且更容易接受新知识，所以请不要相信基础无用论。</p><h4 id="经典面试题-4" tabindex="-1"><a class="header-anchor" href="#经典面试题-4"><span>经典面试题</span></a></h4><ol><li>计算机网络各层有哪些协议？</li><li>TCP 和 UDP 协议的区别？</li><li>TCP 为什么需要三次握手和四次挥手？</li><li>HTTP 和 HTTPS 协议的区别？</li></ol><h4 id="资源-6" tabindex="-1"><a class="header-anchor" href="#资源-6"><span>资源</span></a></h4><ul><li>视频</li></ul><ul> - 《计算机网络微课堂》：https://www.bilibili.com/video/BV1c4411d7jb </ul>',13),E=l("ul",null," - ⭐《图解 HTTP》 - 《网络是怎样连接的》 - ⭐《图解 TCP / IP》 ",-1),N=a('<ul> - 浙大计算机网络基础：https://github.com/QSCTech/zju-icicles </ul><h3 id="尾声-1" tabindex="-1"><a class="header-anchor" href="#尾声-1"><span>尾声</span></a></h3><p>巩固基础要花至少 1 个月的时间，当你读完《Java 核心技术卷1》并且不用查询文档也能熟练地用 Java 做题时，就可以接着往下了。</p><h2 id="阶段-3-java-企业开发基础" tabindex="-1"><a class="header-anchor" href="#阶段-3-java-企业开发基础"><span>阶段 3：Java 企业开发基础</span></a></h2><h3 id="目标-2" tabindex="-1"><a class="header-anchor" href="#目标-2"><span>目标</span></a></h3><p>面向薪资编程，学习实际后台开发工作要用的基础技术和框架，并能 <strong>独立</strong> 做出一个具有完整功能的 Java Web 项目。</p><p>学完这个阶段后，你应该已经能独立开发出大多数常见的后台系统了，比如各种管理系统、商城系统等。</p><h3 id="🌕-mysql-数据库-7-天" tabindex="-1"><a class="header-anchor" href="#🌕-mysql-数据库-7-天"><span>🌕 MySQL 数据库（7 天）</span></a></h3><p>企业中大部分业务数据都是用关系型数据库存储的，因此数据库是后台开发同学的必备技能，其中 MySQL 数据库是目前的主流，也是面试时的重点。</p><h4 id="知识-6" tabindex="-1"><a class="header-anchor" href="#知识-6"><span>知识</span></a></h4><ul><li>基本概念</li><li>MySQL 搭建</li><li>SQL 语句编写</li><li>约束</li><li>索引</li><li>事务</li><li>锁机制</li><li>设计数据库表</li><li>性能优化</li></ul><h4 id="学习建议-7" tabindex="-1"><a class="header-anchor" href="#学习建议-7"><span>学习建议</span></a></h4><p>其中，<strong>SQL 语句编写</strong> 和 <strong>设计数据库表</strong> 这两个能力一定要有！</p><p>比如让你做一个学生管理系统，你要能想到需要哪些表，比如学生表、班级表；每个表需要哪些字段、字段类型。</p><p>这就要求大家多写 SQL、多根据实际的业务场景去练习设计能力。</p><h4 id="经典面试题-5" tabindex="-1"><a class="header-anchor" href="#经典面试题-5"><span>经典面试题</span></a></h4><ol><li>MySQL 索引的最左原则</li><li>InnoDB 和 MyIsam 引擎的区别？</li><li>有哪些优化数据库性能的方法？</li><li>如何定位慢查询？</li><li>MySQL 支持行锁还是表锁？分别有哪些优缺点？</li></ol><h4 id="资源-7" tabindex="-1"><a class="header-anchor" href="#资源-7"><span>资源</span></a></h4><ul><li>视频</li></ul><ul> - ⭐ 老杜 - mysql入门基础 + 数据库实战：https://www.bilibili.com/video/BV1Vy4y1z7EX（较新、内容相对精炼，有习题） - 尚硅谷 - MySQL基础教程：https://www.bilibili.com/video/BV1xW411u7ax（小姐姐讲课，但感觉音质一般） </ul>',20),R=l("ul",null," - ⭐ SQL 自学网：http://xuesql.cn/ - ⭐ SQL 在线运行：https://www.bejson.com/runcode/sql/ ",-1),G=l("ul",null," - SQL - 菜鸟教程：https://www.runoob.com/sql/sql-tutorial.html - MySQL - 菜鸟教程：https://www.runoob.com/mysql/mysql-tutorial.html ",-1),q=a('<ul> - [数据库大全](https://www.code-nav.cn/rd/?rid=b00064a76012546b016e274a3724c5f0)：果创云收录的各种数据库表设计 </ul><h3 id="🌕-开发框架-60-天" tabindex="-1"><a class="header-anchor" href="#🌕-开发框架-60-天"><span>🌕 开发框架（60 天）</span></a></h3><p>Java 之所以能成为主流的企业开发语言，很大一部分原因是它完善的框架生态，用好框架，不仅能够大大提升开发效率，还能提高项目的稳定性、减少维护成本。</p><p>开发框架是后台开发工作中不可或缺的，也是面试考察的重点，一定要好好学！</p><p>不知道 Java 能做什么的朋友们，学完开发框架，就会有答案啦。</p><p>下面给大家推荐的都是企业中应用最多的主流开发框架，知识点比较零碎，就放在一起讲了。</p><h4 id="知识-7" tabindex="-1"><a class="header-anchor" href="#知识-7"><span>知识</span></a></h4><ul><li>描述：Java 网页应用开发基础</li><li>一丢丢前端基础</li><li>XML</li><li>JSON</li><li>Servlet</li><li>Filter</li><li>Listener</li><li>JSP</li><li>JSTL</li><li>Cookie</li><li>Session</li><li>描述：Java 轻量级应用框架</li><li>IOC</li><li>AOP</li><li>事务</li><li>描述：Java 轻量级 web 开发框架</li><li>什么是 MVC？</li><li>请求与响应</li><li>Restful API</li><li>拦截器</li><li>配置</li><li>执行过程</li><li>描述：数据访问框架，操作数据库进行增删改查等操作</li><li>增删改查</li><li>全局配置</li><li>动态 SQL</li><li>缓存</li><li>和其他框架的整合</li><li>逆向工程</li><li>描述：Mybatis 的增强工具，能够简化开发、提高效率</li><li>引入</li><li>通用 CRUD</li><li>条件构造器</li><li>代码生成器</li><li>插件扩展</li><li>自定义全局操作</li><li>描述：简化 Spring 应用的初始搭建以及开发过程，提高效率</li><li>常用注解</li><li>资源整合</li><li>高级特性</li><li>本地热部署</li><li>描述：Spring 的安全管理框架</li><li>用户认证</li><li>权限管理</li><li>相关技术：Shiro</li><li>描述：项目管理工具</li><li>构建</li><li>依赖管理</li><li>插件</li><li>配置</li><li>子父工程</li><li>多模块打包构建</li><li>Nexus 私服搭建</li></ul><h4 id="学习建议-8" tabindex="-1"><a class="header-anchor" href="#学习建议-8"><span>学习建议</span></a></h4><p>由于技术较多，且框架之间存在一定的联系，因此建议大家看同一系列的视频教程（尚硅谷、狂神说等等都可以），以保证学习内容的连续以及体验上的一致。</p><p>学这些技术的时候，<strong>千万不能懒</strong> ！一定要多记笔记，并且跟着老师写代码。原理部分不要太过纠结，先以能跟着敲出代码、写出可运行的项目为主，有些东西做出来也能帮助你更好地理解理论。</p><p>学习顺序挺重要的，建议按我推荐的顺序学，不要一上手就学 Spring Boot。只有先学习下自己整合框架的方法，才能帮你理解 SpringBoot 解决的问题，感受到它的方便和高效。</p><p>Maven / Gradle 当成工具用就好，面试基本不问，跟着框架教程去用就行了，急着找工作的话，先不用花太多时间去深入学。大厂面试问这个的也不多。</p><h4 id="经典面试题-6" tabindex="-1"><a class="header-anchor" href="#经典面试题-6"><span>经典面试题</span></a></h4><ol><li>Spring 的 IOC 和 AOP 是什么，有哪些优点？</li><li>Spring 框架用到了哪些设计模式？</li><li>介绍 Spring Bean 的生命周期</li><li>MyBatis 如何实现延迟加载？</li><li>介绍 MyBatis 的多级缓存机制</li></ol><h4 id="资源-8" tabindex="-1"><a class="header-anchor" href="#资源-8"><span>资源</span></a></h4><ul><li>视频（按顺序看）</li></ul><ul> - ⭐ 尚硅谷最新版 JavaWeb 全套教程：https://www.bilibili.com/video/BV1Y7411K7zz（前端部分最好也看下） - ⭐ 尚硅谷 - Spring 5 框架最新版教程（idea版）：https://www.bilibili.com/video/BV1Vf4y127N5 - ⭐ 尚硅谷 - SpringMVC 2021 最新教程：https://www.bilibili.com/video/BV1Ry4y1574R - ⭐ 尚硅谷 - MyBatis 实战教程全套完整版：https://www.bilibili.com/video/BV1mW411M737 - ⭐ 尚硅谷 - MyBatisPlus 教程：https://www.bilibili.com/video/BV1Ds411E76Y - Maven 零基础入门教程：https://www.bilibili.com/video/BV1TW411g7hP（搞不懂 Maven 可以看看） - ⭐ 雷丰阳 2021 版 SpringBoot2 零基础入门：https://www.bilibili.com/video/BV19K4y1L7MT - 尚硅谷 - SpringSecurity 框架教程：https://www.bilibili.com/video/BV15a411A7kP </ul><h3 id="🌘-开发规范-3-天" tabindex="-1"><a class="header-anchor" href="#🌘-开发规范-3-天"><span>🌘 开发规范（3 天）</span></a></h3><p>开发不规范，同事两行泪。</p><p>开发规范是团队开发中必须遵守的，有利于提高项目的开发效率、降低维护成本。</p><h4 id="知识-8" tabindex="-1"><a class="header-anchor" href="#知识-8"><span>知识</span></a></h4><ul><li>代码规范</li></ul><ul> - 代码风格 - 命名 - 其他规则 </ul>',24),z=l("h4",{id:"学习建议-9",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#学习建议-9"},[l("span",null,"学习建议")])],-1),H=l("p",null,"有时间的话，简单过一遍大厂团队的代码规范手册就好了，以后做项目的时候能想起来的话就去使用，或者从书中、网上查规范文档，再去遵守。",-1),Q=l("p",null,"项目做得多了，自然会养成好的习惯，不用刻意去记（毕竟每个团队规范也不完全相同，背了也没用）。也可以直接利用开发工具自带的一些代码检查插件，帮忙养成好的编码习惯。",-1),F=l("h4",{id:"资源-9",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#资源-9"},[l("span",null,"资源")])],-1),O=l("ul",null,[l("li",null,"书籍")],-1),U=l("ul",null," - ⭐ 阿里巴巴 Java 开发手册：https://developer.aliyun.com/graph/java（搜索《Java开发手册》） ",-1),K=l("ul",null," - 华山版《Java开发手册》独家讲解：https://developer.aliyun.com/live/1201 ",-1),W=a('<ul> - Google Java Style Guide：https://google.github.io/styleguide/javaguide.html（谷歌 Java 代码规范） </ul><h3 id="🌕-git-3-天" tabindex="-1"><a class="header-anchor" href="#🌕-git-3-天"><span>🌕 Git（3 天）</span></a></h3><p>此前大家可能听说过 GitHub，一流的代码开源托管平台。</p><p>Git 和它可不一样，是一个版本控制工具，可以更好地管理和共享项目代码，比如把自己的代码传到 GitHub 上、或者从远程下载。</p><p>无论自己做项目、还是团队开发，Git 都是现在不可或缺的神器。</p><h4 id="知识-9" tabindex="-1"><a class="header-anchor" href="#知识-9"><span>知识</span></a></h4><ul><li>区分 Git 和 GitHub</li><li>工作区</li><li>分支</li><li>代码提交、推送、拉取、回退、重置</li><li>分支操作</li><li>代码合并、解决冲突</li><li>标签</li><li>cherry-pick</li><li>Git Flow</li><li>相关技术：SVN（比较老）</li></ul><h4 id="学习建议-10" tabindex="-1"><a class="header-anchor" href="#学习建议-10"><span>学习建议</span></a></h4><p>每个命令跟着敲一遍，有个大致的印象，会用即可。</p><p>建议平时大家可以多把自己的代码使用 Git 命令上传到 GitHub 上，用的多了自然就熟悉了。</p><h4 id="经典面试题-7" tabindex="-1"><a class="header-anchor" href="#经典面试题-7"><span>经典面试题</span></a></h4><ol><li>如何解决提交冲突？</li><li>提交不小心出现误操作，如何撤销？</li><li>什么是 Git Flow，它有什么好处？</li></ol><h4 id="资源-10" tabindex="-1"><a class="header-anchor" href="#资源-10"><span>资源</span></a></h4><ul><li>视频</li></ul><ul> - ⭐【尚硅谷】5h打通Git全套教程丨2021最新IDEA版 https://www.bilibili.com/video/BV1vy4y1s7k6 </ul>',15),X=l("ul",null," - 猴子都能懂的 Git 入门 https://backlog.com/git-tutorial/cn/ - ⭐ GitHub 漫游指南 https://github.phodal.com/ ",-1),Z=l("ul",null," - GitHub 官方文档：https://docs.github.com/cn ",-1),Y=a('<ul> - Learning Git Branching：https://learngitbranching.js.org/?locale=zh_CN </ul><h3 id="🌖-linux-10-天" tabindex="-1"><a class="header-anchor" href="#🌖-linux-10-天"><span>🌖 Linux（10 天）</span></a></h3><p>企业中的很多前后台项目都是部署在 Linux 服务器上的，因此很有必要熟悉 Linux 的操作和脚本的编写。</p><p>后面学微服务、学架构都是在多台服务器操作，如果你不熟悉 Linux，会有点吃力。</p><h4 id="知识-10" tabindex="-1"><a class="header-anchor" href="#知识-10"><span>知识</span></a></h4><ul><li>Linux 系统安装</li><li>环境变量</li><li>文件管理</li><li>用户管理</li><li>内存管理</li><li>磁盘管理</li><li>进程管理</li><li>网络管理</li><li>软件包管理</li><li>服务管理</li><li>日志管理</li><li>Linux 内核</li><li><strong>常用命令</strong></li><li><strong>常用环境搭建</strong></li><li><strong>Shell 脚本编程</strong></li><li><strong>VIM 的使用</strong></li></ul><h4 id="学习建议-11" tabindex="-1"><a class="header-anchor" href="#学习建议-11"><span>学习建议</span></a></h4><p>多动手实践，建议自己购买一台云服务器，并且在本地搭建 Linux 虚拟机环境。</p><p>一定要自己从 0 开始手敲命令安装软件、部署服务，熟悉整个项目的上线流程。</p><p>每个命令至少要跟着敲一遍，了解它们的作用，并通过自然地练习，熟悉常用的 Linux 命令。</p><p>记不住没关系，用文档查就行了。</p><p>先会用，再理解。一般面试问的 Linux 题目也不会很难，面试前去背一下八股文就没什么问题，感兴趣的话可以去看看 Linux 内核设计。</p><h4 id="经典面试题-8" tabindex="-1"><a class="header-anchor" href="#经典面试题-8"><span>经典面试题</span></a></h4><ol><li>如何查看某个进程的运行状态？</li><li>如何在 Linux 上查看 2 G 的大文件？</li><li>Linux 软链接和硬链接的区别</li></ol><h4 id="资源-11" tabindex="-1"><a class="header-anchor" href="#资源-11"><span>资源</span></a></h4><ul><li>视频</li></ul><ul> - ⭐ 2021 韩顺平 一周学会Linux https://www.bilibili.com/video/BV1Sv411r7vd（基于 CentOS 7.6 版本较新） </ul>',17),$=l("ul",null," - 《鸟哥的 Linux 私房菜 —— 基础篇》http://cn.linux.vbird.org/linux_basic/linux_basic.php（经典） ",-1),ll=l("ul",null," - Linux 工具快速教程：https://linuxtools-rst.readthedocs.io（基础、工具进阶、工具参考） ",-1),il=l("ul",null," - ⭐ 蓝桥云课 Linux 基础入门：https://www.lanqiao.cn/courses/1 - 腾讯云动手实验室：https://cloud.tencent.com/developer/labs - 阿里云体验实验室：https://developer.aliyun.com/adc/labs/ - 阿里云知行实验室：https://start.aliyun.com/ - 华为云沙箱实验室：https://lab.huaweicloud.com/ ",-1),al=l("ul",null," - Linux 中国：https://linux.cn/ ",-1),tl=a('<ul> - ⭐ Linux 命令搜索：https://wangchujiang.com/linux-command - Linux 命令大全手册：https://www.linuxcool.com/ - Linux 命令示例：http://linux-commands-examples.com/ - 宝塔 Linux 面板：https://www.bt.cn/ </ul><h3 id="🌘-前端基础-14-天" tabindex="-1"><a class="header-anchor" href="#🌘-前端基础-14-天"><span>🌘 前端基础（14 天）</span></a></h3><p>虽然 Java 程序员面试时基本不会出现前端相关问题，但是在企业中，往往需要前后端程序员配合完成工作。会一些前端，不仅可以提高你们的协作效率，还能提高自己对整个项目的了解和掌控力，甚至能独立开发出一个完整项目！这点也是能给面试加分的。</p><h4 id="知识-11" tabindex="-1"><a class="header-anchor" href="#知识-11"><span>知识</span></a></h4><ul><li>HTML</li><li>CSS</li><li>JavaScript</li></ul><ul> - Ajax </ul>',6),el=a('<h4 id="学习建议-12" tabindex="-1"><a class="header-anchor" href="#学习建议-12"><span>学习建议</span></a></h4><p>不需要学习太多的前端技术，熟悉下基础的前端三件套，了解前端是如何向后端发送请求来做数据交互的一般就够了。有时间的话可以学下 Vue ，是比较容易上手的主流前端开发框架，Vue + SpringBoot 还是很香的。</p><h4 id="资源-12" tabindex="-1"><a class="header-anchor" href="#资源-12"><span>资源</span></a></h4><p>参见鱼皮原创的前端学习路线：https://mp.weixin.qq.com/s/HbzLEt6NOP9Is9F3GOnbUQ</p><h3 id="练手项目-1" tabindex="-1"><a class="header-anchor" href="#练手项目-1"><span>练手项目</span></a></h3><blockquote><p>更多请见本路线阶段 5：[项目源码（50 套）](###项目源码（50 套）) 。</p></blockquote><ul><li>HotelSystem：https://github.com/misterchaos/HotelSystem（酒店管理系统 Java,tomcat,mysql,servlet,jsp实现，没有使用任何框架）</li><li>超市管理系统：https://github.com/zhanglei-workspace/shopping-management-system</li><li>Mall4j：https://github.com/gz-yami/mall4j（Spring Boot 电商系统）</li><li>newbee-mall：https://github.com/newbee-ltd/newbee-mall（基于 Spring Boot 2.X 的全栈电商系统）</li><li>litemall：https://github.com/linlinjava/litemall（小商城系统，Spring Boot 后端 + Vue 管理员前端 + 微信小程序用户前端 + Vue 用户移动端）</li><li>forum-java：https://github.com/Qbian61/forum-java（一款用 Java Spring Boot 实现的现代化社区系统）</li></ul><h3 id="尾声-2" tabindex="-1"><a class="header-anchor" href="#尾声-2"><span>尾声</span></a></h3><p>学完这个阶段的知识后，一定要再串起来回忆一遍，必须自己独立开发一个 Java Web 项目（量级可以不大，但你学过的技术尽可能地用上），能发布到 Linux 服务器上让其他小伙伴访问就更好了~</p><p>如果你只是对 Java 感兴趣、或者只是想试着自己开发后台，并不是想靠 Java 找工作的话，学到这里就可以了。可以把更多时间投入到你主方向的学习中。</p><p>但如果你是想找 Java 方向的工作，尤其是想进大厂的话，一定要继续努力，用心学习下个阶段的企业开发进阶知识。</p><h2 id="阶段-4-java-企业开发进阶" tabindex="-1"><a class="header-anchor" href="#阶段-4-java-企业开发进阶"><span>阶段 4：Java 企业开发进阶</span></a></h2><h3 id="目标-3" tabindex="-1"><a class="header-anchor" href="#目标-3"><span>目标</span></a></h3><p>学习更多企业级开发技术和编程思想，能够结合多种技术，独立开发出架构合理的完整系统，<strong>解决实际问题</strong> 。</p><p>要了解为什么需要这个技术？什么时候用这个技术？某个需求该用哪些技术？</p><p>当然，这个阶段的内容有些过于丰富，不是所有的东西都要学，大家可以根据自己的实际情况（时间），有选择地学习。</p><h3 id="🌘-软件工程" tabindex="-1"><a class="header-anchor" href="#🌘-软件工程"><span>🌘 软件工程</span></a></h3><p>软件开发和管理的一些概念、原则、技术、方法、工具和经验。</p><h4 id="知识-12" tabindex="-1"><a class="header-anchor" href="#知识-12"><span>知识</span></a></h4><ul><li>软件的本质</li><li>软件特性</li><li>软件过程</li><li>软件开发原则</li></ul><ul> - 开闭原则 - 里氏替换原则 - 依赖倒置原则 - 单一职责原则 - 接口隔离原则 - 迪米特法则 </ul>',21),sl=l("ul",null," - 单元测试 - 集成测试 - 系统测试 - 压力测试 - 部署测试 ",-1),nl=l("ul",null," - 成熟度模型 ",-1),ol=l("h4",{id:"学习建议-13",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#学习建议-13"},[l("span",null,"学习建议")])],-1),hl=l("p",null,"大学软件专业的必修课，偏理论，能学到很多企业软件开发的方法，也是对软件开发同学综合能力的提升，有时间的话可以了解下。但对想要快速找工作的同学来说，忽略即可，面试基本不会问。",-1),cl=l("h4",{id:"资源-13",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#资源-13"},[l("span",null,"资源")])],-1),pl=l("ul",null,[l("li",null,"书籍")],-1),ul=l("ul",null," - 《软件工程：实践者的研究方法》：https://book.douban.com/subject/6047742/（经典大黑书，讲的非常全面，但同样完整读下来还是有些难度的） - 《软件开发的 201 个原则》：https://book.douban.com/subject/35628886/（工具书，看一遍挺好的） ",-1),rl=l("ul",null," - 清华大学软件工程：https://www.bilibili.com/video/BV1eE411V7Cr - 北京大学软件工程：https://www.bilibili.com/video/BV1Vt411V72G - 大连工业大学软件工程：https://www.bilibili.com/video/BV1Ns41177VM ",-1),dl=l("ul",null," - 浙大计算机软件工程：https://github.com/QSCTech/zju-icicles ",-1),bl=l("h3",{id:"🌖-设计模式-21-天",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#🌖-设计模式-21-天"},[l("span",null,"🌖 设计模式（21 天）")])],-1),gl=l("p",null,"设计模式是软件开发中解决一类问题的通用方法。",-1),ml=l("p",null,"使用设计模式能让你写出更优雅、可维护的代码，也正因如此，很多框架源码都用到了设计模式，你不学很难看懂。",-1),wl=l("h4",{id:"知识-13",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#知识-13"},[l("span",null,"知识")])],-1),_l=l("ul",null,[l("li",null,"创建型模式：对象实例化的模式，创建型模式用于解耦对象的实例化过程")],-1),vl=l("ul",null," - 单例模式 - 工厂方法模式 - 抽象工厂 - 建造者模式 - 原型模式 ",-1),fl=l("ul",null," - 适配器模式 - 组合模式 - 装饰器模式 - 代理模式 - 享元模式 - 外观模式 - 桥接模式 ",-1),xl=a('<ul> - 迭代器模式 - 模板方法模式 - 策略模式 - 命令模式 - 状态模式 - 责任链模式 - 备忘录模式 - 观察者模式 - 访问者模式 - 中介者模式 - 解释器模式 </ul><h4 id="学习建议-14" tabindex="-1"><a class="header-anchor" href="#学习建议-14"><span>学习建议</span></a></h4><p>先理解概念，了解每个设计模式的特点和应用场景，再多加练习，运用到实际项目。</p><h4 id="经典面试题-9" tabindex="-1"><a class="header-anchor" href="#经典面试题-9"><span>经典面试题</span></a></h4><ol><li>单例模式有哪些实现方式？有哪些优缺点？请手写其中一种</li><li>你用过哪些设计模式，为什么用它？</li></ol><h4 id="资源-14" tabindex="-1"><a class="header-anchor" href="#资源-14"><span>资源</span></a></h4><ul><li>书籍</li></ul><ul> - ⭐《图解设计模式》（强烈推荐这本书，正是用 Java 语言实现，图多、有示例代码、有习题和答案，很不错） - 《Head First 设计模式》 - 《大话设计模式》 - 《设计模式：可复用面向对象软件的基础》（大黑书，有能力的话也可以去读） </ul>',8),jl=l("ul",null," - 尚硅谷图解 Java 设计模式：https://www.bilibili.com/video/BV1G4411c7N4 ",-1),Jl=l("ul",null," - 菜鸟教程：https://www.runoob.com/design-pattern/design-pattern-tutorial.html - 图说设计模式：https://design-patterns.readthedocs.io/zh_CN/latest/ ",-1),Sl=l("h3",{id:"🌕-缓存-14-天",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#🌕-缓存-14-天"},[l("span",null,"🌕 缓存（14 天）")])],-1),yl=l("p",null,"缓存是高并发系统不可或缺的技术，可以提高系统的性能和并发，因此是后台开发必学的知识点，也是面试重点。",-1),kl=l("h4",{id:"知识-14",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#知识-14"},[l("span",null,"知识")])],-1),Bl=l("ul",null,[l("li",null,"什么是缓存？"),l("li",null,"本地缓存")],-1),Cl=l("ul",null," - Caffeine 库 ",-1),Ml=l("ul",null,[i(" - 数据类型 - 常用操作 - Java 操作 Redis "),l("ul",null," - Spring Boot Redis Template - Redisson "),i(" - 主从模型搭建 - 哨兵集群搭建 - 日志持久化 ")],-1),Vl=l("ul",null," - 数据共享 - 单点登录 - 计数器 - 限流 - 点赞 - 实时排行榜 - 分布式锁 ",-1),Al=l("ul",null," - 缓存雪崩 - 缓存击穿 - 缓存穿透 - 缓存更新一致性 ",-1),Dl=a('<h4 id="学习建议-15" tabindex="-1"><a class="header-anchor" href="#学习建议-15"><span>学习建议</span></a></h4><p>学会如何简单地使用缓存并不难，和数据库类似，无非就是调用 API 对数据进行增删改查。</p><p>因此，建议先能够独立使用它，了解缓存的应用场景；再学习如何在 Java 中操作缓存中间件，并尝试和项目相结合，提高系统的性能。</p><p>跟着视频教程实操一遍即可，可以等到面试前再去深入了解原理和高级特性。</p><h4 id="经典面试题-10" tabindex="-1"><a class="header-anchor" href="#经典面试题-10"><span>经典面试题</span></a></h4><ol><li>Redis 为什么快？</li><li>Redis 有哪些常用的数据结构？</li><li>Redis RDB 和 AOF 持久化的区别，如何选择？</li><li>如何解决缓存击穿、缓存穿透、雪崩问题？</li><li>如何用 Redis 实现点赞功能，怎么设计 Key / Value？</li></ol><h4 id="资源-15" tabindex="-1"><a class="header-anchor" href="#资源-15"><span>资源</span></a></h4><ul><li>视频</li></ul><ul> - ⭐ 尚硅谷 - 2021 最新 Redis 6 入门到精通教程：https://www.bilibili.com/video/BV1Rv41177Af（基于 Redis 6 的，推荐） </ul>',9),Ll=l("ul",null," - Redis 命令参考：http://redisdoc.com/ - Redis 面试题整理：https://github.com/lokles/Web-Development-Interview-With-Java/blob/main/Redis%E9%97%AE%E9%A2%98.md ",-1),Pl=l("ul",null," - 《Redis 实战》（经典） ",-1),Il=l("ul",null," - ⭐ Redis 在线练习：https://try.redis.io/（强烈推荐） ",-1),Tl=l("h3",{id:"🌖-消息队列-14-天",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#🌖-消息队列-14-天"},[l("span",null,"🌖 消息队列（14 天）")])],-1),El=l("p",null,"消息队列是用于传输和保存消息的容器，也是大型分布式系统中常用的技术，主要解决应用耦合、异步消息、流量削锋等问题。后台开发必学，也是面试重点。",-1),Nl=l("h4",{id:"知识-15",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#知识-15"},[l("span",null,"知识")])],-1),Rl=l("ul",null,[l("li",null,"消息队列的作用"),l("li",null,"RabbitMQ 消息队列")],-1),Gl=l("ul",null," - 生产消费模型 - 交换机模型 - 死信队列 - 延迟队列 - 消息持久化 - Java 操作 - 集群搭建 ",-1),ql=a('<h4 id="学习建议-16" tabindex="-1"><a class="header-anchor" href="#学习建议-16"><span>学习建议</span></a></h4><p>和缓存一样，学会如何使用消息队列并不难，无非就是调用 API 去生产、转发和消费消息。</p><p>因此，建议先能够独立使用它，了解消息队列的应用场景；再学习如何在 Java 中操作消息队列中间件，并尝试和项目相结合，感受消息队列带来的好处。</p><p>这里我建议初学者先学习 RabbitMQ，比 Kafka 要好理解一些。跟着视频教程实操一遍即可，可以等到面试前再去深入了解原理和高级特性。</p><h4 id="经典面试题-11" tabindex="-1"><a class="header-anchor" href="#经典面试题-11"><span>经典面试题</span></a></h4><ol><li>使用消息队列有哪些优缺点？</li><li>如何保证消息消费的幂等性？</li><li>消息队列有哪些路由模型？</li><li>你是否用过消息队列，解决过什么问题？</li></ol><h4 id="资源-16" tabindex="-1"><a class="header-anchor" href="#资源-16"><span>资源</span></a></h4><ul><li>视频</li></ul><ul> - ⭐ 尚硅谷 - 2021 最新 RabbitMQ 教程：https://www.bilibili.com/video/BV1cb4y1o7zz（很新很全面） </ul>',9),zl=l("ul",null," - RabbitMQ 中文文档：http://rabbitmq.mr-ping.com/ ",-1),Hl=l("ul",null," - 《RabbitMQ 实战：高效部署分布式消息队列》（经典） ",-1),Ql=a('<ul> - ⭐ RabbitMQ 在线模拟器：http://tryrabbitmq.com/ </ul><h3 id="🌖-nginx-14-天" tabindex="-1"><a class="header-anchor" href="#🌖-nginx-14-天"><span>🌖 Nginx（14 天）</span></a></h3><p>Nginx 是主流的、开源的、高性能的 HTTP 和反向代理 web 服务器，可以用于挂载网站、请求转发、负载均衡、网关路由等。前后端开发同学都需要学习，在后端开发的面试中有时会考到。</p><h4 id="知识-16" tabindex="-1"><a class="header-anchor" href="#知识-16"><span>知识</span></a></h4><ul><li>Nginx 作用</li><li>正向代理</li><li>反向代理（负载均衡）</li><li>常用命令</li><li>配置</li><li>动静分离（网站部署）</li><li>集群搭建</li><li>相关技术：HAProxy、Apache</li></ul><h4 id="学习建议-17" tabindex="-1"><a class="header-anchor" href="#学习建议-17"><span>学习建议</span></a></h4><p>Nginx 的基本使用非常简单，甚至不需要看任何的视频，跟着一篇文章就能够用它来提供网站访问能力、实现反向代理。</p><p>但是在企业中，Nginx 的使用往往没那么简单，作为负载均衡、请求转发的重要组件，往往需要针对实际场景去写一些特定的配置。因此建议有时间的话，实践下 Nginx 的配置方法，了解 Nginx 基本的设计思想，对今后自己设计系统时也有帮助。</p><h4 id="经典面试题-12" tabindex="-1"><a class="header-anchor" href="#经典面试题-12"><span>经典面试题</span></a></h4><ol><li>Nginx 有哪些作用？</li><li>Nginx 为什么支持高并发？</li><li>Nginx 有哪些负载均衡策略？</li><li>什么是 Nginx 惊群问题，如何解决它？</li></ol><h4 id="资源-17" tabindex="-1"><a class="header-anchor" href="#资源-17"><span>资源</span></a></h4><ul><li>视频</li></ul><ul> - ⭐ 尚硅谷 - Nginx 教程由浅入深：https://www.bilibili.com/video/BV1zJ411w7SV（讲的比较全面） - ⭐ Nginx 鱼皮 - 手把手带你从0搭建个人网站：https://www.bilibili.com/video/BV1rU4y1J785/ （简单演示 Nginx 部署网站） </ul>',13),Fl=l("ul",null," - Nginx 中文文档：https://www.nginx.cn/doc/index.html ",-1),Ol=a('<ul> - Nginx 配置在线生成：https://www.digitalocean.com/community/tools/nginx?global.app.lang=zhCN </ul><h3 id="🌗-netty-网络编程-21-天" tabindex="-1"><a class="header-anchor" href="#🌗-netty-网络编程-21-天"><span>🌗 Netty 网络编程（21 天）</span></a></h3><p>开源的 Java 网络编程框架，用于开发高性能（事件驱动、异步非阻塞）、高可靠的网络服务器和客户端程序。</p><p>很多网络框架和服务器程序都用到了 Netty 作为底层，学好 Netty 不仅可以让我们自己实现高性能服务器，也能更好地理解其他的框架应用、阅读源码。</p><h4 id="知识-17" tabindex="-1"><a class="header-anchor" href="#知识-17"><span>知识</span></a></h4><ul><li>IO 模型（BIO / NIO）</li><li>Channel</li><li>Buffer</li><li>Seletor</li><li>Netty 模型</li><li>WebSocket 编程（动手做个聊天室）</li><li>相关技术：Vertx（中文文档：http://vertxchina.github.io/vertx-translation-chinese/，比 Netty 简单多了，实在看不懂 Netty 也可以学习下这个）</li></ul><h4 id="学习建议-18" tabindex="-1"><a class="header-anchor" href="#学习建议-18"><span>学习建议</span></a></h4><p>不同于之前学的 SSM 框架，Netty 还是需要一定学习成本的，一方面是国内资源太缺乏，另一方面很多重要的概念（比如 NIO）还是要多动手写代码调试才能理解。</p><p>还是建议先从视频入门，并且不建议在 Netty 上花太多时间，面试的时候一般也就考察一些 Netty 背后的思想（比如 NIO）而非框架本身的语法细节。</p><h4 id="经典面试题-13" tabindex="-1"><a class="header-anchor" href="#经典面试题-13"><span>经典面试题</span></a></h4><ol><li>Netty 有哪些优点？</li><li>什么是 NIO？</li><li>介绍 Netty 的零拷贝机制</li></ol><h4 id="资源-18" tabindex="-1"><a class="header-anchor" href="#资源-18"><span>资源</span></a></h4><ul><li>视频</li></ul><ul> - ⭐ 尚硅谷Netty教程：https://www.bilibili.com/video/BV1DJ411m7NR - Netty 技术演讲（中文字幕版）：https://www.youtube.com/watch?v=I8yy2Cy7dDI </ul>',14),Ul=l("ul",null," - Netty 4 用户指南：https://www.w3cschool.cn/netty_4_user_guide/ ",-1),Kl=a('<ul> - 《Netty 实战》 </ul><h3 id="🌖-微服务-60-天" tabindex="-1"><a class="header-anchor" href="#🌖-微服务-60-天"><span>🌖 微服务（60 天）</span></a></h3><p>随着互联网的发展，项目越来越复杂，单机且庞大的巨石项目已无法满足开发、运维、并发、可靠性等需求。</p><p>因此，后台架构不断演进，可以将庞大的项目拆分成一个个职责明确、功能独立的细小模块，模块可以部署在多台服务器上，相互配合协作，提供完整的系统能力。</p><p>换言之，想做大型项目，这块儿一定要好好学！</p><h4 id="知识-18" tabindex="-1"><a class="header-anchor" href="#知识-18"><span>知识</span></a></h4><ul><li>架构演进</li><li>RPC</li><li>Zookeeper</li><li>服务提供者</li><li>服务消费者</li><li>项目搭建</li><li>相关技术：DubboX（对 Dubbo 的扩展）</li><li>微服务概念</li><li>Spring Cloud 框架</li></ul><ul> - 子父工程 - 服务注册与发现 - 注册中心 Eureka、Zookeeper、Consul - Ribbon 负载均衡 - Feign 服务调用 - Hystrix 服务限流、降级、熔断 - Resilience4j 服务容错 - Gateway（Zuul）微服务网关 - Config 分布式配置中心 - 分布式服务总线 - Sleuth + Zipkin 分布式链路追踪 </ul>',8),Wl=a('<ul> - Nacos 注册、配置中心 - OpenFeign 服务调用 - Sentinel 流控 - Seata 分布式事务 </ul><ul><li>Swagger 接口文档</li><li>Postman 接口测试</li><li>相关技术：YApi、ShowDoc</li></ul><h4 id="学习建议-19" tabindex="-1"><a class="header-anchor" href="#学习建议-19"><span>学习建议</span></a></h4><p>时间不急的话，建议先从 Dubbo 学起，对分布式、RPC、微服务有些基本的了解，再去食用 Spring Cloud 全家桶会更香。学完 Spring Cloud 全家桶后，再去学 Spring Cloud Alibaba 就很简单了。</p><p>这部分内容的学习，原理 + 实践都很重要，也不要被各种高大上的词汇唬住了，都是上层（应用层）的东西，基本没有什么算法，跟着视频教程学，其实还是很好理解的。</p><p>分布式相关知识非常多，但这里不用刻意去背，先通过视频教程实战使用一些微服务框架，也能对其中的概念有基本的了解。</p><p>大厂面试的时候很少问 Spring Cloud 框架的细节，更多的是微服务以及各组件的一些思想，比如网关的好处、消息总线的好处等。</p><h4 id="经典面试题-14" tabindex="-1"><a class="header-anchor" href="#经典面试题-14"><span>经典面试题</span></a></h4><ol><li>什么是微服务，有哪些优缺点？</li><li>什么是注册中心，能解决什么问题？</li></ol><h4 id="资源-19" tabindex="-1"><a class="header-anchor" href="#资源-19"><span>资源</span></a></h4><ul><li>视频</li></ul><ul> - ⭐ 尚硅谷 Dubbo 教程：https://www.bilibili.com/video/BV1ns411c7jV - ⭐ 尚硅谷 SpringCloud（H版&amp;alibaba）框架开发教程（微服务分布式架构）：https://www.bilibili.com/video/BV18E411x7eT（把国外的 Spring Cloud 和国内的 Spring Cloud Alibaba 结合在一起对比着去讲，主流技术栈、知识点都讲到了，真心不错！） </ul>',12),Xl=l("ul",null," - Apache Dubbo 官方文档：https://dubbo.apache.org/zh/ - Spring Cloud Alibaba 官方文档：https://github.com/alibaba/spring-cloud-alibaba/blob/master/README-zh.md - ⭐ Swagger 教学文档：https://doc.xiaominfo.com/（跟着快速开始直接用就好了） ",-1),Zl=l("h3",{id:"🌖-容器-7-天",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#🌖-容器-7-天"},[l("span",null,"🌖 容器（7 天）")])],-1),Yl=l("p",null,"将应用和环境进行封装，相互隔离、独立部署、便于移植，提高安全性、提高开发和维护效率。",-1),$l=l("p",null,"便于实现微服务、持续集成和交付。",-1),li=l("h4",{id:"知识-19",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#知识-19"},[l("span",null,"知识")])],-1),ii=l("ul",null,[l("li",null,"🌖 Docker")],-1),ai=l("ul",null," - 容器概念 - 镜像 - 部署服务 - Dockerfile - Docker Compose - Docker Machine - Docker Swarm - 多阶段构建 ",-1),ti=l("ul",null,[i(" - K8S 架构 - 工作负载 "),l("ul",null," - 资源类型 - Pod - Pod 生命周期 - Pod 安全策略 "),i(" - K8S 组件 - K8S 对象 - 部署应用 - 服务 "),l("ul",null," - Ingress "),i(" - Kubectl 命令行 - 集群管理 ")],-1),ei=a('<h4 id="学习建议-20" tabindex="-1"><a class="header-anchor" href="#学习建议-20"><span>学习建议</span></a></h4><p>业务上云是趋势，但是对于开发同学来说，会用 Docker / K8S 部署项目和服务就行。实际工作中，企业一般都有现成的平台直接用，面试考察的也不多，不用花太多时间。</p><h4 id="经典面试题-15" tabindex="-1"><a class="header-anchor" href="#经典面试题-15"><span>经典面试题</span></a></h4><ol><li>什么是容器？</li><li>使用 Docker 有哪些好处？</li><li>如何快速启动多个 Docker 节点？</li></ol><h4 id="资源-20" tabindex="-1"><a class="header-anchor" href="#资源-20"><span>资源</span></a></h4><ul><li>视频</li></ul><ul> - ⭐【狂神说】Docker 最新超详细版教程通俗易懂：https://www.bilibili.com/video/BV1og4y1q7M4 - K8S 视频教程：https://www.bilibili.com/video/BV1K5411N7j8 </ul>',7),si=l("ul",null," - 《深入浅出 Docker》：https://www.zhihu.com/pub/reader/119632192 ",-1),ni=l("ul",null," - Docker — 从入门到实践：https://vuepress.mirror.docker-practice.com/ - 菜鸟教程 Docker：https://www.runoob.com/docker/docker-tutorial.html - 国外 Docker 官方文档：https://docs.docker.com/get-started/ ",-1),oi=l("ul",null," - Docker 中文社区：https://www.docker.org.cn/（强烈推荐，有很多 Docker 技术文章和学习笔记） - Docker Blog：https://www.docker.com/blog/（国外 Docker 技术博客） ",-1),hi=a('<ul> - Docker Hub：https://hub.docker.com - 腾讯软件源：http://mirrors.tencent.com/#/index - 阿里云 Docker 仓库：https://cr.console.aliyun.com/ </ul><h3 id="🌗-ci-cd-3-天" tabindex="-1"><a class="header-anchor" href="#🌗-ci-cd-3-天"><span>🌗 CI / CD（3 天）</span></a></h3><p>持续集成 / 持续交付，贯穿整个研发到项目上线的过程，提高效率。</p><p>大公司一般都有自己的 CI / CD 平台。</p><h4 id="知识-20" tabindex="-1"><a class="header-anchor" href="#知识-20"><span>知识</span></a></h4><ul><li>什么是 CI / CD</li><li>CI / CD 有什么好处</li><li>使用任一 CI / CD 平台</li><li>相关技术：Jenkins、GitLab、微信云托管</li></ul><h4 id="学习建议-21" tabindex="-1"><a class="header-anchor" href="#学习建议-21"><span>学习建议</span></a></h4><p>了解它是什么，并且实战使用任一 CI / CD 平台，感受它和传统开发运维到底有什么不同，就足够了。其实很简单，不要花太多时间。</p><p>真正要自己去搭建的时候，跟着官方文档来就行。</p><h4 id="资源-21" tabindex="-1"><a class="header-anchor" href="#资源-21"><span>资源</span></a></h4><ul><li>视频</li></ul><ul> - ⭐【狂神说】CI/CD到底是什么？十分钟理解企业级DevOps：https://www.bilibili.com/video/BV1zf4y127vu（讲的非常棒！带你快速理解 CI / CD 的作用和部分原理） - 尚硅谷 - Jenkins 持续集成工具教程：https://www.bilibili.com/video/BV1GW411w7pn（实在要用到 Jenkins 再去学） </ul>',12),ci=l("ul",null," - Jenkins 官方文档：https://www.jenkins.io/zh/ （有很多案例，要用的时候查一下就行了） ",-1),pi=a('<ul> - ⭐ 微信云托管：https://cloud.weixin.qq.com/cloudrun（直播演示过，鱼皮后面会给大家出视频教程） - 前端托管 Webify：https://cloud.tencent.com/product/webify（鱼皮给大家出过视频教程的 https://www.bilibili.com/video/BV11V411p7vf/） </ul><h3 id="练手项目-2" tabindex="-1"><a class="header-anchor" href="#练手项目-2"><span>练手项目</span></a></h3><blockquote><p>更多请见本路线阶段 5：[项目源码（50 套）](###项目源码（50 套）) 。</p></blockquote><ul><li>mall-learning：https://github.com/macrozheng/mall-learningmall（学习教程，架构、业务、技术要点全方位解析）</li><li>miaosha：https://github.com/qiurunze123/miaosha （秒杀系统设计与实现）</li><li>Mall：https://github.com/macrozheng/mall（包括前台商城系统及后台管理系统，基于 SpringBoot+MyBatis 实现）</li><li>Spring-Cloud-Admin：https://github.com/wxiaoqi/Spring-Cloud-AdminCloud-Admin（基于 Spring Cloud 微服务化开发平台，具有统一授权、认证的后台管理系统）</li><li>paascloud-master：https://github.com/paascloud/paascloud-master（基于 spring cloud + vue + oAuth2.0，前后端分离商城系统）</li><li>mall-swarm：https://github.com/macrozheng/mall-swarm（一套微服务商城系统，采用了 Spring Cloud Greenwich、Spring Boot 2、MyBatis、Docker、Elasticsearch 等核心技术，同时提供了基于 Vue 的管理后台方便快速搭建系统）</li><li>SecKill：https://github.com/hfbin/Seckill（基于 SpringBoot+Mybatis+Redis+RabbitMQ 秒杀系统）</li><li>jeecg-boot：https://github.com/zhangdaiscott/jeecg-boot（低代码开发平台）</li><li>PassJava-Platform：https://github.com/Jackson0714/PassJava-Platform（一款面试刷题的 Spring Cloud 开源系统）</li></ul><h3 id="尾声-3" tabindex="-1"><a class="header-anchor" href="#尾声-3"><span>尾声</span></a></h3><p>看到这里，相信你已经感叹：编程语言一辈子学不完了！</p><p>但是，不用担心，通过对这么多知识点的学习，相信你已经有了一定的积累，也不知不觉地锻炼了自主学习能力、资源检索能力、代码阅读能力、问题解决能力，之后的学习会越来越轻松。</p><p>接下来，可以试着用你学到的技术来解决实际的问题，自主从 0 开始做一些项目，保持编程手感。</p><h2 id="阶段-5-项目实战" tabindex="-1"><a class="header-anchor" href="#阶段-5-项目实战"><span>阶段 5：项目实战</span></a></h2><h3 id="目标-4" tabindex="-1"><a class="header-anchor" href="#目标-4"><span>目标</span></a></h3><p>综合所学技术从 0 到 1 开发和上线一个全面、有特色的、可以写进简历的个人项目。</p><h3 id="学习建议-22" tabindex="-1"><a class="header-anchor" href="#学习建议-22"><span>学习建议</span></a></h3><p>其实在之前的框架学习视频中应该就做过几个项目了，但相对不够完整和体系化。</p><p>有想法的同学可以做任何自己想做的项目，推荐参加一些作品类竞赛，练手、拿奖、收获项目经历一举三得。</p><p>暂时没想法的朋友，建议先跟着专门带做项目的视频教程做 1 - 2 套 Java 完整项目，一定要从 0 到 1 自己手写！</p><p>有能力的朋友也可以试着用 GitHub 上的源码来学习啦~</p><p>做一个完整的项目的确很不容易，建议大家根据自己的 <strong>时间、兴趣</strong> 选择 <strong>较新的</strong>、<strong>有配套源码的</strong> 教程，保持耐心。</p><p>如何选择编程学习资源，可以看下我的原创文章：https://mp.weixin.qq.com/s/mlMql9RJCd7THt6rpGb8UA</p><p>下面推荐一些优质的、较新的项目实战视频教程 + 50 套项目源码。</p><h3 id="视频教程" tabindex="-1"><a class="header-anchor" href="#视频教程"><span>视频教程</span></a></h3><ul><li>尚硅谷 - 谷粒学院 - 微服务 + 全栈 - 在线教育实战项目：https://www.bilibili.com/video/BV1dQ4y1A75e（全栈项目，前后端讲得都很全面）</li><li>尚硅谷 - 尚筹网 - Java项目实战开发教程 - SSM 框架 + 微服务架构：https://www.bilibili.com/video/BV1bE411T7oZ（500 多集，包含完整的用户权限管理，功能丰富、讲得很细致全面）</li><li>黑马 - 24 小时搞定 Java 毕设电商项目：https://www.bilibili.com/video/BV13f4y1r7fS</li><li>黑马程序员 Java 项目《传智健康》，超完整的企业级医疗行业项目：https://www.bilibili.com/video/BV1Bo4y117zV</li><li>黑马程序员 Java 项目《万信金融》企业级开发实战，互联网金融行业解决方案：https://www.bilibili.com/video/BV1Ub4y1f7rk</li><li>黑马程序员 Java 项目 SaaS 移动办公完整版《iHRM 人力资源管理系统》，跨行业 SaaS 办公整合性解决方案：https://www.bilibili.com/video/BV18A411L7UX</li><li>黑马程序员 Java 大型分布式微服务闪聚支付项目，Java 移动支付全生态系统：https://www.bilibili.com/video/BV17v411V79c</li><li>黑马程序员 Java 项目《好客租房》：https://www.bilibili.com/video/BV1sZ4y1F7PD</li></ul><h3 id="常用类库" tabindex="-1"><a class="header-anchor" href="#常用类库"><span>常用类库</span></a></h3><ul><li>Guava：谷歌开发的 Java 工具库（https://github.com/google/guava）</li><li>Apache Commons：各类工具库，比如 commons-lang、commons-io、commons-collections 等（https://github.com/apache/commons-lang）</li><li>Hutool：Java 工具集库（https://github.com/looly/hutool）</li><li>Lombok：Java 增强库（https://github.com/projectlombok/lombok）</li><li>Apache HttpComponents Client：HTTP 客户端库（https://github.com/apache/httpcomponents-client）</li><li>OkHttp：适用于 JVM、Android 等平台的 Http 客户端（https://github.com/square/okhttp）</li><li>Gson：谷歌的 JSON 处理库（https://github.com/google/gson）</li><li>Jcommander：Java 命令行参数解析框架（https://github.com/cbeust/jcommander）</li><li>Apache PDFBox：PDF 操作库（https://github.com/apache/pdfbox）</li><li>EasyExcel：阿里的 Excel 处理库（https://github.com/alibaba/easyexcel）</li><li>Apache POI：表格文件处理库（https://github.com/apache/poi）</li><li>JUnit：Java 测试框架（https://github.com/junit-team/junit4）</li><li>Mockito：Java 单元测试 Mock 框架（https://github.com/mockito/mockito）</li><li>Selenium：浏览器自动化框架（https://github.com/SeleniumHQ/selenium）</li><li>htmlunit：Java 模拟浏览器（https://github.com/HtmlUnit/htmlunit）</li><li>TestNG：Java 测试框架（https://github.com/cbeust/testng）</li><li>Jacoco：Java 代码覆盖度库（https://github.com/jacoco/jacoco）</li><li>cglib：字节码生成库（https://github.com/cglib/cglib）</li><li>Arthas：Java 诊断工具（https://github.com/alibaba/arthas）</li><li>config：针对 JVM 的配置库（https://github.com/lightbend/config）</li><li>Quasar：Java 纤程库（https://github.com/puniverse/quasar）</li><li>drools：Java 规则引擎（https://github.com/kiegroup/drools）</li><li>Caffeine：Java 高性能缓存库（https://github.com/ben-manes/caffeine）</li><li>Disruptor：高性能线程间消息传递库（https://github.com/LMAX-Exchange/disruptor）</li><li>Knife4j：Swagger 文档增强（https://doc.xiaominfo.com/）</li><li>Thumbnailator：Java 缩略图生成库（https://github.com/coobird/thumbnailator）</li><li>Logback：Java 日志库（https://github.com/qos-ch/logback）</li><li>Apache Camel：消息传输集成框架（https://github.com/apache/camel）</li><li>Quartz：定时任务调度库（https://github.com/quartz-scheduler/quartz）</li><li>Apache Mahout：机器学习库（https://github.com/apache/mahout）</li><li>Apache OpenNLP：NLP 工具库（https://github.com/apache/opennlp）</li><li>RxJava：JVM 反应式编程框架（https://github.com/ReactiveX/RxJava）</li><li>JProfiler：性能分析库（https://www.ej-technologies.com/products/jprofiler/overview.html）</li><li>jsoup：HTML 文档解析库（https://jsoup.org/）</li><li>webmagic：Java 爬虫框架（https://github.com/code4craft/webmagic/）</li></ul><h3 id="idea-插件" tabindex="-1"><a class="header-anchor" href="#idea-插件"><span>IDEA 插件</span></a></h3><p>综合实用性、易用性、流行度、维护频率，精选了以下插件，简单分类为天地二品。</p><h4 id="精选地品插件" tabindex="-1"><a class="header-anchor" href="#精选地品插件"><span>精选地品插件</span></a></h4><p>简单好用、增强功能</p><ul><li>Background Image Plus +</li></ul><ul> - 描述：给编辑器设置背景图片（小姐姐图片） - 官网：https://plugins.jetbrains.com/plugin/11247-background-image-plus- </ul>',29),ui=l("ul",null," - 描述：中文支持 - 官网：https://plugins.jetbrains.com/plugin/13710-chinese-simplified-language-pack---- ",-1),ri=l("ul",null," - 描述：翻译插件，鼠标选中文本，点击右键即可自动翻译成多国语言。 - 官网：https://plugins.jetbrains.com/plugin/8579-translation/ ",-1),di=l("ul",null," - 描述：快捷键提示插件。当你执行鼠标操作时，如果该操作可被快捷键代替，会给出提示，帮助你自然形成使用快捷键的习惯，告别死记硬背。 - 官网：https://plugins.jetbrains.com/plugin/9792-key-promoter-x/ ",-1),bi=l("ul",null," - 描述：给括号添加彩虹色，使开发者通过颜色区分括号嵌套层级，便于阅读 - 官网：https://plugins.jetbrains.com/plugin/10080-rainbow-brackets/ ",-1),gi=l("ul",null," - 描述：在编辑器右侧生成代码小地图，可以拖拽小地图光标快速定位代码，阅读行数很多的代码文件时非常实用。 - 官网：https://plugins.jetbrains.com/plugin/7275-codeglance/ ",-1),mi=l("ul",null," - 描述：代码统计和跟踪插件 - 官网：https://plugins.jetbrains.com/plugin/7425-wakatime ",-1),wi=l("ul",null," - 描述：代码统计 - 官网：https://plugins.jetbrains.com/plugin/4509-statistic ",-1),_i=l("h4",{id:"精选天品插件",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#精选天品插件"},[l("span",null,"精选天品插件")])],-1),vi=l("p",null,"提高开发效率和代码质量",-1),fi=l("ul",null,[l("li",null,"String Manipulation")],-1),xi=l("ul",null," - 描述：字符串快捷处理 - 官网：https://plugins.jetbrains.com/plugin/2162-string-manipulation ",-1),ji=l("ul",null," - 描述：使用 AI 去自动提示和补全代码，比 IDEA 自带的代码补全更加智能化 - 官网：https://plugins.jetbrains.com/plugin/12798-tabnine-ai-code-completion-js-java-python-ts-rust-go-php–more ",-1),Ji=l("ul",null," - 描述：根据 json 生成对象 - 官网：https://plugins.jetbrains.com/plugin/14949-gsonformatplus ",-1),Si=l("ul",null," - 描述：自动生成单元测试 - 官网：https://plugins.jetbrains.com/plugin/3064-junitgenerator-v2-0 ",-1),yi=l("ul",null," - 描述：辅助 web 开发的工具集 - 官网：https://plugins.jetbrains.com/plugin/14280-restfultool ",-1),ki=l("ul",null," - 描述：自动生成方法调用时序图 - 官网：https://plugins.jetbrains.com/plugin/8286-sequencediagram ",-1),Bi=l("ul",null," - 描述：自动检查 Java 代码规范 - 官网：https://plugins.jetbrains.com/plugin/1065-checkstyle-idea ",-1),Ci=l("ul",null," - 描述：代码规范检查插件 - 官网：https://plugins.jetbrains.com/plugin/10046-alibaba-java-coding-guidelines ",-1),Mi=l("ul",null," - 描述：帮助你发现和修复代码的错误和漏洞 - 官网：https://plugins.jetbrains.com/plugin/7973-sonarlint ",-1),Vi=l("ul",null," - 描述：MyBatis 增强插件，支持自动生成 entity、mapper、service 等常用操作的代码，优化体验 - 官网：https://plugins.jetbrains.com/plugin/10119-mybatisx ",-1),Ai=l("h4",{id:"美化类",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#美化类"},[l("span",null,"美化类")])],-1),Di=l("ul",null,[l("li",null,"Extra Icons")],-1),Li=l("ul",null," - 描述：图标美化插件，支持更多文件类型 - 官网：https://plugins.jetbrains.com/plugin/11058-extra-icons ",-1),Pi=l("ul",null," - 描述：中文支持 - 官网：https://plugins.jetbrains.com/plugin/13710-chinese-simplified-language-pack---- ",-1),Ii=l("ul",null," - 描述：自定义设置控制台输出颜色 - 官网：https://plugins.jetbrains.com/idea/plugin/7125-grep-console ",-1),Ti=l("ul",null," - 描述：美观的主题 - 官网：https://plugins.jetbrains.com/plugin/8006-material-theme-ui ",-1),Ei=l("ul",null," - 描述：进度条美化 - 官网：https://plugins.jetbrains.com/plugin/8575-nyan-progress-bar ",-1),Ni=l("ul",null," - 描述：打字特效 - 官网：https://plugins.jetbrains.com/plugin/8330-activate-power-mode ",-1),Ri=l("ul",null," - 描述：打字特效插件升级版 - 官网：https://plugins.jetbrains.com/plugin/8251-power-mode-ii ",-1),Gi=l("ul",null," - 描述：给括号添加彩虹色，使开发者通过颜色区分括号嵌套层级，便于阅读 - 官网：https://plugins.jetbrains.com/plugin/10080-rainbow-brackets/ ",-1),qi=l("ul",null," - 描述：给编辑器设置背景图片 - 官网：https://plugins.jetbrains.com/plugin/11247-background-image-plus- ",-1),zi=l("h4",{id:"代码生成类",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#代码生成类"},[l("span",null,"代码生成类")])],-1),Hi=l("ul",null,[l("li",null,"Codota AI Autocomplete for Java and JavaScript")],-1),Qi=l("ul",null," - 描述：使用 AI 去自动提示和补全代码，比 IDEA 自带的代码补全更加智能化 - 官网：https://plugins.jetbrains.com/plugin/7638-codota-ai-autocomplete-for-java-and-javascript ",-1),Fi=l("ul",null," - 描述：使用 AI 来自动提示和补全代码，比 IDEA 自带的代码补全更加智能化 - 官网：https://plugins.jetbrains.com/plugin/12798-tabnine-ai-code-completion-js-java-python-ts-rust-go-php–more ",-1),Oi=l("ul",null," - 描述：生成随机的 UUID - 官网：https://plugins.jetbrains.com/plugin/8320-uuid-generator ",-1),Ui=l("ul",null," - 描述：生成随机值 - 官网：https://plugins.jetbrains.com/plugin/9836-randomness ",-1),Ki=l("ul",null," - 描述：生成不同语言的版本控制忽略文件 - 官网：https://plugins.jetbrains.com/plugin/7495–ignore ",-1),Wi=l("ul",null," - 描述：通过快捷键自动补全函数的调用参数 - 官网：https://plugins.jetbrains.com/plugin/8638-auto-filling-java-call-arguments/ ",-1),Xi=l("ul",null," - 描述：快速生成调用对象 setter 方法的代码 - 官网：https://plugins.jetbrains.com/plugin/9360-generateallsetter ",-1),Zi=l("ul",null," - 描述：一键为实现 Serializable 接口的类生成 SerialVersionUID - 官网：https://plugins.jetbrains.com/plugin/185-generateserialversionuid/ ",-1),Yi=l("ul",null," - 描述：根据 json 生成对象 - 官网：https://plugins.jetbrains.com/plugin/14949-gsonformatplus ",-1),$i=l("ul",null," - 描述：配合 Lombok 依赖及注解使用，能够大大减少 Java 对象的代码量。IDEA 已自带，无需安装。 - 官网：https://plugins.jetbrains.com/plugin/6317-lombok/ ",-1),la=l("ul",null," - 描述：根据数据库表生成 Java entity、dao、mapper、service、controller 等代码 - 官网：https://plugins.jetbrains.com/plugin/10954-easy-code ",-1),ia=l("ul",null," - 描述：快速生成 Javadoc 文档 - 官网：https://plugins.jetbrains.com/plugin/12977-easy-javadoc ",-1),aa=l("ul",null," - 描述：生成 Javadoc 文档 - 官网：https://plugins.jetbrains.com/plugin/7157-javadoc ",-1),ta=l("ul",null," - 描述：根据 JSON 生成 POJO，根据 POJO 生成 JSON - 官网：https://plugins.jetbrains.com/plugin/8533-json2pojo ",-1),ea=l("ul",null," - 描述：自动生成单元测试 - 官网：https://plugins.jetbrains.com/plugin/3064-junitgenerator-v2-0 ",-1),sa=l("ul",null," - 描述：根据自定义模板来生成 javadoc 注释 - 官网：https://plugins.jetbrains.com/plugin/8309-jindent–source-code-formatter ",-1),na=l("ul",null," - 描述：MyBatis 增强插件，支持自动生成 entity、mapper、service 等常用操作的代码，优化体验 - 官网：https://plugins.jetbrains.com/plugin/10119-mybatisx ",-1),oa=l("ul",null," - 描述：MyBatis 增强插件，支持自动生成 entity、mapper、service 等常用操作的代码（收费） - 官网：https://plugins.jetbrains.com/plugin/9837-mybatiscodehelperpro ",-1),ha=l("h4",{id:"功能提效类",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#功能提效类"},[l("span",null,"功能提效类")])],-1),ca=l("ul",null,[l("li",null,"Call Graph")],-1),pa=l("ul",null," - 描述：生成调用关系图，便于查看源码 - 官网：https://plugins.jetbrains.com/plugin/12304-call-graph ",-1),ua=l("ul",null," - 描述：支持跳转到任意行进行调试 - 官网：https://plugins.jetbrains.com/plugin/14877-jump-to-line ",-1),ra=l("ul",null," - 描述：自动生成方法调用时序图 - 官网：https://plugins.jetbrains.com/plugin/8286-sequencediagram ",-1),da=l("ul",null," - 描述：字节码查看器 - 官网：https://plugins.jetbrains.com/plugin/9248-jclasslib-bytecode-viewer ",-1),ba=l("ul",null," - 描述： 快速在相同单词间进行跳转 - 官网：https://plugins.jetbrains.com/plugin/201-browsewordatcaret ",-1),ga=l("ul",null," - 描述：在编辑器右侧生成代码小地图，可以拖拽小地图光标快速定位代码，阅读行数很多的代码文件时非常实用。 - 官网：https://plugins.jetbrains.com/plugin/7275-codeglance/ ",-1),ma=l("ul",null,[l("li",null,"CheckStyle-IDEA")],-1),wa=l("ul",null," - 描述：自动检查 Java 代码规范 - 官网：https://plugins.jetbrains.com/plugin/1065-checkstyle-idea ",-1),_a=l("ul",null," - 描述：代码规范检查插件 - 官网：https://plugins.jetbrains.com/plugin/10046-alibaba-java-coding-guidelines ",-1),va=l("ul",null," - 描述：帮助你发现和修复代码的错误和漏洞 - 官网：https://plugins.jetbrains.com/plugin/7973-sonarlint ",-1),fa=l("ul",null," - 描述：帮你找出代码中潜藏的 Bug - 官网：https://plugins.jetbrains.com/plugin/3847-findbugs-idea ",-1),xa=l("ul",null," - 描述：代码复杂度分析 - 官网：https://plugins.jetbrains.com/plugin/93?pr=idea ",-1),ja=l("ul",null,[l("li",null,"CamelCase")],-1),Ja=l("ul",null," - 描述：快速字符串格式转换工具，如驼峰式 - 官网：https://plugins.jetbrains.com/plugin/7160-camelcase ",-1),Sa=l("ul",null," - 描述：验证和格式化 Json 字符串的工具 - 官网：https://plugins.jetbrains.com/plugin/10650-json-parser ",-1),ya=l("ul",null," - 描述：把 Properties 文件的格式转为 YAML 格式 - 官网：https://plugins.jetbrains.com/plugin/8000-properties-to-yaml-converter ",-1),ka=l("ul",null," - 描述：字符串快捷处理 - 官网：https://plugins.jetbrains.com/plugin/2162-string-manipulation ",-1),Ba=l("ul",null,[l("li",null,"WakaTime")],-1),Ca=l("ul",null," - 描述：代码统计和跟踪插件 - 官网：https://plugins.jetbrains.com/plugin/7425-wakatime ",-1),Ma=l("ul",null," - 描述：代码统计 - 官网：https://plugins.jetbrains.com/plugin/4509-statistic ",-1),Va=l("ul",null,[l("li",null,"OnlineSearch")],-1),Aa=l("ul",null," - 描述：选择文本后支持不同搜索引擎进行搜索 - 官网：https://plugins.jetbrains.com/plugin/8298-onlinesearch/ ",-1),Da=l("ul",null," - 描述：快捷地打开搜索引擎进行搜索 - 官网：https://plugins.jetbrains.com/plugin/12578-codesearch ",-1),La=l("ul",null,[l("li",null,"Leetcode Editor")],-1),Pa=l("ul",null," - 描述：在 IDEA 里刷算法题 - 官网：https://plugins.jetbrains.com/plugin/12132-leetcode-editor ",-1),Ia=l("ul",null," - 描述：监听文件，当其发生变化时自动执行命令 - 官网：https://plugins.jetbrains.com/plugin/7177-file-watchers ",-1),Ta=l("ul",null," - 描述：UML 建模工具，只需简单的代码就能画出复杂的 UML 类图 - 官网：https://plugins.jetbrains.com/plugin/7017-plantuml-integration ",-1),Ea=l("ul",null," - 描述：字节码编辑工具 - 官网：https://plugins.jetbrains.com/plugin/8461-bytecode-editor ",-1),Na=l("ul",null," - 描述：阿里云工具集 - 官网：https://plugins.jetbrains.com/plugin/11386-alibaba-cloud-toolkit ",-1),Ra=l("ul",null," - 描述：腾讯云工具集 - 官网：https://plugins.jetbrains.com/plugin/15653-tencent-cloud-toolkit ",-1),Ga=l("ul",null," - 描述：面向教育者，允许创建、分享和加入练习 - 官网：https://plugins.jetbrains.com/plugin/10081-edutools ",-1),qa=l("ul",null," - 描述：IntelliJ IDEA 官方出的学习辅助插件 - 官网：https://plugins.jetbrains.com/plugin/8554-ide-features-trainer ",-1),za=l("ul",null," - 描述：项目热更新，提高效率（可惜要收费） - 官网：https://plugins.jetbrains.com/plugin/4441-jrebel-and-xrebel-for-intellij ",-1),Ha=l("ul",null," - 描述：快捷键提示插件。当你执行鼠标操作时，如果该操作可被快捷键代替，会给出提示，帮助你自然形成使用快捷键的习惯，告别死记硬背。 - 官网：https://plugins.jetbrains.com/plugin/9792-key-promoter-x/ ",-1),Qa=l("ul",null," - 描述：翻译插件，鼠标选中文本，点击右键即可自动翻译成多国语言。 - 官网：https://plugins.jetbrains.com/plugin/8579-translation/ ",-1),Fa=l("ul",null," - 描述：自动提醒，防止你久坐不动 - 官网：https://github.com/s-unscrupulous/idea_seat ",-1),Oa=l("ul",null," - 描述：辅助 web 开发的工具集 - 官网：https://plugins.jetbrains.com/plugin/14280-restfultool ",-1),Ua=l("ul",null," - 描述：同时启动多应用 - 官网：https://plugins.jetbrains.com/plugin/7248-multirun ",-1),Ka=l("h4",{id:"扩展增强类",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#扩展增强类"},[l("span",null,"扩展增强类")])],-1),Wa=l("ul",null,[l("li",null,"Free Mybatis Plugin")],-1),Xa=l("ul",null," - 描述：MyBatis 增强插件，支持 mapper => xml 的跳转、代码生成等功能 - 官网：https://plugins.jetbrains.com/plugin/8321-free-mybatis-plugin ",-1),Za=l("ul",null," - 描述：MyBatis SQL 提取和格式化输出 - 官网：https://plugins.jetbrains.com/plugin/10065-mybatis-log-plugin ",-1),Ya=l("ul",null," - 描述：Maven 辅助插件 - 官网：https://plugins.jetbrains.com/plugin/7179-maven-helper ",-1),$a=l("ul",null," - 描述：Gradle 项目管理工具的扩展 - 官网：https://plugins.jetbrains.com/plugin/7150-gradle-view ",-1),lt=l("ul",null," - 描述： Arthas 命令生成插件。Arthas 是阿里开源的 Java 在线诊断工具，该插件可以自动生成 Arthas 在线 Java 代码诊断命令，不用再到官网翻文档拼命令啦！ - 官网：https://plugins.jetbrains.com/plugin/13581-arthas-idea/ ",-1),it=l("ul",null," - 描述： Git 增强插件。在自带的 Git 功能之上，新增了查看 Git 状态、自动拉取代码、提交通知等功能。最好用的是可以查看到每一行代码的最近一次提交信息。 - 官网：https://plugins.jetbrains.com/plugin/7499-gittoolbox/ ",-1),at=l("ul",null," - 描述：支持 Bash 脚本文件的高亮和提示等 - 官网：https://plugins.jetbrains.com/plugin/4230-bashsupport ",-1),tt=l("ul",null," - 描述：Git Flow 的图形界面操作 - 官网：https://plugins.jetbrains.com/plugin/7315-git-flow-integration ",-1),et=l("ul",null," - 描述：开源中国的码云插件 - 官网：https://plugins.jetbrains.com/plugin/8383-gitee ",-1),st=l("ul",null," - 描述：规则引擎的扩展 - 官网：https://plugins.jetbrains.com/plugin/16871-drools ",-1),nt=l("ul",null," - 描述：对多环境配置文件的支持 - 官网：https://plugins.jetbrains.com/plugin/7861-envfile ",-1),ot=l("ul",null," - 描述：容器管理的扩展 - 官网：https://plugins.jetbrains.com/plugin/10485-kubernetes ",-1),ht=l("ul",null," - 描述：Vue.js 前端框架的扩展 - 官网：https://plugins.jetbrains.com/plugin/9442-vue-js ",-1),ct=l("ul",null," - 描述：Scala 语言的扩展 - 官网：https://plugins.jetbrains.com/plugin/1347-scala ",-1),pt=l("ul",null," - 描述：Zookeeper 中间件的扩展 - 官网：https://plugins.jetbrains.com/plugin/7364-zookeeper ",-1),ut=l("ul",null," - 描述：对 Java 消息服务的扩展 - 官网：https://plugins.jetbrains.com/plugin/10949-jms-messenger ",-1),rt=l("ul",null," - 描述：对 MapStruct 对象转换的支持 - 官网：https://plugins.jetbrains.com/plugin/10036-mapstruct-support ",-1),dt=l("ul",null," - 描述：提供了 HDFS 等大数据框架的工具集 - 官网：https://plugins.jetbrains.com/plugin/12494-big-data-tools ",-1),bt=l("ul",null," - 描述：支持 CSV 文件的高亮和提示等 - 官网：https://plugins.jetbrains.com/plugin/10037-csv ",-1),gt=l("ul",null," - 描述：识别和格式化 log 日志文件 - 官网：https://plugins.jetbrains.com/plugin/9746-ideolog ",-1),mt=l("ul",null," - 描述：支持 toml 文件的高亮和提示等 - 官网：https://plugins.jetbrains.com/plugin/8195-toml ",-1),wt=a('<ul> - 描述：支持 .env 文件的高亮和提示等 - 官网：https://plugins.jetbrains.com/plugin/9525–env-files-support </ul><h3 id="常用软件" tabindex="-1"><a class="header-anchor" href="#常用软件"><span>常用软件</span></a></h3><p><strong>以下部分软件可在【公众号：程序员鱼皮】回复【软件】获取~</strong></p><ul><li>JetBrains IDEA：Java 集成开发环境，凭学生邮箱可申请免费使用（https://www.jetbrains.com/idea/）</li><li>Reset Jetbrains：你懂的</li><li>Visual Studio Code：插件化代码编辑器（https://code.visualstudio.com/）</li><li>Sublime Text：轻量代码编辑器（https://www.sublimetext.com/）</li><li>Navicat：数据库管理软件（https://www.navicat.com.cn/）</li><li>JMeter：Java 性能测试工具（https://jmeter.apache.org/）</li><li>JVisual VM：Java 运行状态可视化工具（https://visualvm.github.io/）</li><li>XShell：SSH 连接软件（https://www.netsarang.com/zh/xshell/）</li><li>XFtp：FTP 连接软件（https://www.netsarang.com/zh/xftp/）</li><li>Redis Desktop Manager：Redis 可视化管理工具（https://github.com/uglide/RedisDesktopManager）</li><li>Postman：接口测试工具（https://www.postman.com/）</li><li>VMware：虚拟机软件（https://www.vmware.com/）</li><li>Chocolatey：Windows 软件包管理器（https://chocolatey.org/）</li><li>Typora：写文档软件（https://typora.io/）</li><li>Ditto：强大的剪切板（https://ditto-cp.sourceforge.io/）</li><li>uTools：插件化的效率工具（https://u.tools/）</li><li>XMind：思维导图软件（https://www.xmind.cn/）</li><li>Qdir：Windows 多窗口管理器（https://q-dir.en.softonic.com/）</li></ul><h3 id="项目源码-50-套" tabindex="-1"><a class="header-anchor" href="#项目源码-50-套"><span>项目源码（50 套）</span></a></h3><h4 id="电商秒杀" tabindex="-1"><a class="header-anchor" href="#电商秒杀"><span>电商秒杀</span></a></h4><ul><li>天猫整站 J2EE：https://how2j.cn/module/115.htm</li><li>天猫整站 SSM：https://how2j.cn/module/134.html</li><li>天猫整站 Springboot：https://how2j.cn/module/156.html</li><li>mall-learning：https://github.com/macrozheng/mall-learningmall（学习教程，架构、业务、技术要点全方位解析）</li><li>SpringBoot 电商商城系统 Mall4j：https://github.com/gz-yami/mall4j</li><li>SpringBoot 完整电商系统 Mall：https://github.com/macrozheng/mall（包括前台商城系统及后台管理系统，基于 SpringBoot+MyBatis 实现）</li><li>newbee-mall：https://github.com/newbee-ltd/newbee-mall （一套电商系统，包括 newbee-mall 商城系统及 newbee-mall-admin 商城后台管理系统，基于 Spring Boot 2.X 及相关技术栈开发）</li><li>paascloud-master：https://github.com/paascloud/paascloud-master（基于 spring cloud + vue + oAuth2.0，前后端分离商城系统）</li><li>mall-swarm：https://github.com/macrozheng/mall-swarm（一套微服务商城系统，采用了 Spring Cloud Greenwich、Spring Boot 2、MyBatis、Docker、Elasticsearch 等核心技术，同时提供了基于 Vue 的管理后台方便快速搭建系统）</li><li>onemall：https://github.com/YunaiV/onemall（mall 商城，基于微服务的思想，构建在 B2C 电商场景下的项目实战。核心技术栈，是 Spring Boot + Dubbo 。未来，会重构成 Spring Cloud Alibaba）</li><li>litemall：https://github.com/linlinjava/litemall（又一个小商城，litemall = Spring Boot 后端 + Vue 管理员前端 + 微信小程序用户前端 + Vue 用户移动端）</li><li>xmall：https://github.com/Exrick/xmall （基于SOA架构的分布式电商购物商城 前后端分离 前台商城:Vue全家桶 后台管理系统）</li><li>miaosha：https://github.com/qiurunze123/miaosha （秒杀系统设计与实现）</li><li>SecKill：https://github.com/hfbin/Seckill（基于 SpringBoot+Mybatis+Redis+RabbitMQ 秒杀系统）</li></ul><h4 id="博客论坛" tabindex="-1"><a class="header-anchor" href="#博客论坛"><span>博客论坛</span></a></h4><ul><li>Mblog：开源 Java 博客系统</li><li>halo：一个优秀的开源博客发布应用</li><li>forum-java：一款用 Java（spring boot） 实现的现代化社区（论坛/问答/BBS/社交网络/博客）系统平台</li><li>vhr：微人事是一个前后端分离的人力资源管理系统，项目采用 SpringBoot+Vue 开发。</li><li>favorites-web:云收藏 Spring Boot 2.X 开源项目。云收藏是一个使用 Spring Boot 构建的开源网站，可以让用户在线随时随地收藏的一个网站，在网站上分类整理收藏的网站或者文章。</li><li>community：码问，开源论坛、问答系统，现有功能提问、回复、通知、最新、最热、消除零回复功能。技术栈 Spring、Spring Boot、MyBatis、MySQL/H2、Bootstrap</li><li>NiterForum：尼特社区-NiterForum-一个论坛/社区程序。后端Springboot/MyBatis/Maven/MySQL，前端Thymeleaf/Layui。可供初学者，学习、交流使用。</li><li>VBlog：V部落，Vue+SpringBoot实现的多用户博客管理平台!</li><li>NiceFish：SpringBoot/SpringCloud 前后端分离项目</li><li>My-Blog： My Blog 是由 SpringBoot + Mybatis + Thymeleaf 等技术实现的 Java 博客系统，页面美观、功能齐全、部署简单及完善的代码，一定会给使用者无与伦比的体验。</li><li>My-Blog-layui：layui 版本的 My-Blog : A simple &amp; beautiful blogging system implemented with spring-boot &amp; layui &amp; thymeleaf &amp; mybatis My Blog 是由 SpringBoot + Layui + Mybatis + Thymeleaf 等技术实现的 Java 博客系统，页面美观、功能齐全、部署简单及完善的代码，一定会给使用者无与伦比的体验</li><li>symphony：Java 实现的现代化社区</li></ul><h4 id="管理系统" tabindex="-1"><a class="header-anchor" href="#管理系统"><span>管理系统</span></a></h4><ul><li>Spring-Cloud-Admin：Cloud-Admin 是国内首个基于 Spring Cloud 微服务化开发平台，具有统一授权、认证后台管理系统，其中包含具备用户管理、资源权限管理、网关 API 管理等多个模块，支持多业务系统并行开发，可以作为后端服务的开发脚手架。代码简洁，架构清晰，适合学习和直接项目中使用。核心技术采用 Spring Boot2 以及 Spring Cloud Gateway 相关核心组件，前端采用 vue-element-admin 组件。</li><li>bootshiro：基于 springboot+shiro+jwt 的资源无状态认证权限管理系统后端</li><li>悟空CRM：基于jfinal+vue+ElementUI的前后端分离CRM系统</li><li>EL-ADMIN：基于 SpringBoot 的后台管理系统</li><li>pig：基于 Spring Boot 2.2、 Spring Cloud Hoxton &amp; Alibaba、 OAuth2 的 RBAC 权限管理系统。</li><li>FEBS-Shiro：Spring Boot 2.1.3，Shiro1.4.0 &amp; Layui 2.5.4 权限管理系统。</li><li>Spring Boot-Shiro-Vue：基于Spring Boot-Shiro-Vue 的权限管理</li><li>studentmanager：基于springboot+mybatis学生管理系统</li><li>jshERP：华夏ERP基于SpringBoot框架和SaaS模式，立志为中小企业提供开源好用的ERP软件，目前专注进销存+财务功能。主要模块有零售管理、采购管理、销售管理、仓库管理、财务管理、报表查询、系统管理等。支持预付款、收入支出、仓库调拨、组装拆卸、订单等特色功能。拥有库存状况、出入库统计等报表。同时对角色和权限进行了细致全面控制，精确到每个按钮和菜单。</li><li>HotelSystem：酒店管理系统 Java,tomcat,mysql,servlet,jsp实现，没有使用任何框架</li></ul><h4 id="开发平台" tabindex="-1"><a class="header-anchor" href="#开发平台"><span>开发平台</span></a></h4><ul><li><a href="https://github.com/2014shijina2014/open-capacity-platform" target="_blank" rel="noopener noreferrer">open-capacity-platform</a>：微服务能力开发平台</li><li><a href="https://github.com/zhangdaiscott/jeecg-boot" target="_blank" rel="noopener noreferrer">jeecg-boot</a>：JeecgBoot是一款基于BPM的低代码平台！前后端分离架构 SpringBoot 2.x，SpringCloud，Ant Design&amp;Vue，Mybatis-plus，Shiro，JWT，支持微服务。强大的代码生成器让前后端代码一键生成，实现低代码开发！</li></ul><h4 id="其他" tabindex="-1"><a class="header-anchor" href="#其他"><span>其他</span></a></h4><ul><li>学之思在线考试系统：一款 java + vue 的前后端分离的考试系统</li><li>PassJava-Platform：一款面试刷题的 Spring Cloud 开源系统</li><li>kkFileView：使用spring boot打造文件文档在线预览项目</li><li>dynamic-datasource：一个基于springboot的快速集成多数据源的启动器</li><li>moti-cloud：莫提网盘，基于 SpringBoot+MyBatis+ThymeLeaf+BootStrap，适合初学者</li><li>threadandjuc：three-high-import 高可用\\高可靠\\高性能，三高多线程导入系统（该项目意义为理论贯通)</li><li>proxyee-down：http下载工具，基于http代理，支持多连接分块下载</li><li>hosp_order：医院预约挂号系统，基于 SSM 框架</li><li>趋势投资 SpringCloud</li><li>DiyTomcat</li></ul><h2 id="阶段-6-java-高级" tabindex="-1"><a class="header-anchor" href="#阶段-6-java-高级"><span>阶段 6：Java 高级</span></a></h2><h3 id="目标-5" tabindex="-1"><a class="header-anchor" href="#目标-5"><span>目标</span></a></h3><p>不满足于能做，而是通过更 <strong>深入</strong> 和 <strong>广泛</strong> 的学习，实现高质量的代码和更优秀的架构，培养解决问题的能力。</p><p>已经到了这个阶段，建议除了看完成的教程外，平时多自主搜索信息去学习，积少成多。比如遇到了一个不了解的名词，可以去网上搜一下，感兴趣的话再进行下一步的学习。</p><h3 id="🌖-并发编程-21-天" tabindex="-1"><a class="header-anchor" href="#🌖-并发编程-21-天"><span>🌖 并发编程（21 天）</span></a></h3><p>对 Java 后端开发程序员来说，懂得如何利用有限的系统资源来提高系统的性能是很重要的，也是大厂面试考察的重点，因此并发编程（尤其是 Java 并发包的使用）这块的知识很重要。</p><p>把它放到高级，是因为在学并发编程前，需要有一定的编程经验、了解一定的操作系统知识。</p><h4 id="知识-21" tabindex="-1"><a class="header-anchor" href="#知识-21"><span>知识</span></a></h4><ul><li>线程和进程</li><li>线程状态</li><li>并行和并发</li><li>同步和异步</li><li>Synchronized</li><li>Volatile 关键字</li><li>Lock 锁</li><li>死锁</li><li>可重入锁</li><li>线程安全</li><li>线程池</li><li>JUC 的使用</li><li>AQS</li><li>Fork Join</li><li>CAS</li></ul><h4 id="学习建议-23" tabindex="-1"><a class="header-anchor" href="#学习建议-23"><span>学习建议</span></a></h4><p>并发编程入门不难，依然是 <strong>先学会使用</strong> 基础的 Java 并发包， 再通过大量地实践和测试，了解一些原理，才能真正掌握何时使用、如何更合理地使用并发编程。而不是张口闭口多线程，上天入地高并发。</p><h4 id="经典面试题-16" tabindex="-1"><a class="header-anchor" href="#经典面试题-16"><span>经典面试题</span></a></h4><ol><li>volatile 关键字的作用</li><li>使用线程池有哪些好处？</li><li>线程池参数如何设置？</li><li>什么是线程安全问题，如何解决？</li><li>介绍 synchronized 的锁升级机制</li><li>CopyOnWriteArrayList 适用于哪种场景？</li></ol><h4 id="资源-22" tabindex="-1"><a class="header-anchor" href="#资源-22"><span>资源</span></a></h4><ul><li>视频</li></ul><ul> - ⭐【尚硅谷】大厂必备技术之JUC并发编程2021最新版：https://www.bilibili.com/video/BV1Kw411Z7dF（特点是短、精、新） - 黑马程序员全面深入学习Java并发编程：https://www.bilibili.com/video/BV16J411h7Rd（讲的很细、全面深入） </ul>',31),_t=l("ul",null," - ⭐《Java并发编程实战》（国外的经典） - ⭐《Java 并发编程艺术》（国人写的，理论思想内容较多，有时间建议反复看） ",-1),vt=a('<ul> - ⭐ Java 并发知识点总结：https://github.com/CL0610/Java-concurrency </ul><h3 id="🌖-jvm-30-天" tabindex="-1"><a class="header-anchor" href="#🌖-jvm-30-天"><span>🌖 JVM（30 天）</span></a></h3><p>想要深入理解 Java，探秘 Java 跨平台的奥秘，一定要了解 Java 底层的虚拟机技术。</p><p>了解虚拟机、掌握虚拟机性能调优方法，有助于你写出更高性能、资源占用更小的优质程序。</p><p>在学习 JVM 的过程中，也能学到很多精妙的设计，开拓思路。</p><h4 id="知识-22" tabindex="-1"><a class="header-anchor" href="#知识-22"><span>知识</span></a></h4><ul><li>JVM 内存结构</li><li>JVM 生命周期</li><li>主流虚拟机</li><li>Java 代码执行流程</li><li>类加载</li></ul><ul> - 类加载器 - 类加载过程 - 双亲委派机制 </ul>',8),ft=l("ul",null," - 垃圾回收器 - 垃圾回收策略 - 垃圾回收算法 - StopTheWorld ",-1),xt=l("ul",null," - 性能分析方法 - 常用工具 - 参数设置 ",-1),jt=a('<h4 id="学习建议-24" tabindex="-1"><a class="header-anchor" href="#学习建议-24"><span>学习建议</span></a></h4><p>JVM 的知识略显枯燥，建议先看视频，有实操的地方一定要实操！自己多去分析。</p><p>第一遍不理解没有关系，可以再看书来巩固，想要真正学好，《深入理解 Java 虚拟机（第三版）》一定要读。</p><p>如果只是为了通过面试可以直接看更精简的视频，比如狂神的。</p><h4 id="经典面试题-17" tabindex="-1"><a class="header-anchor" href="#经典面试题-17"><span>经典面试题</span></a></h4><ol><li>介绍 JVM 的内存模型？</li><li>JVM 内存为什么要分代？</li><li>介绍一次完整的 GC 流程</li><li>介绍双亲委派模型，为什么需要它？</li></ol><h4 id="资源-23" tabindex="-1"><a class="header-anchor" href="#资源-23"><span>资源</span></a></h4><ul><li>视频</li></ul><ul> - ⭐ 尚硅谷宋红康 - JVM 全套教程详解：https://www.bilibili.com/video/BV1PJ411n7xZ（讲得相当全面！附有实操） - 【狂神说Java】JVM快速入门篇：https://www.bilibili.com/video/BV1iJ411d7jS（讲得有点浅，但都是面试重点，时间紧的小伙伴可以直接看这个） </ul>',9),Jt=l("ul",null," - ⭐《深入理解 Java 虚拟机（第三版）》（有理论有实践，内容丰富，不可多得的 JVM 学习神书，就是有点废头发） ",-1),St=l("ul",null," - ⭐ Java 虚拟机底层原理知识总结：https://github.com/doocs/jvm ",-1),yt=l("ul",null," - 阿里云 JVM 实战：https://developer.aliyun.com/graph/java/point/64 ",-1),kt=l("ul",null," - Arthas 开源 Java 诊断工具：https://github.com/alibaba/arthas ",-1),Bt=l("h3",{id:"架构设计",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#架构设计"},[l("span",null,"架构设计")])],-1),Ct=l("h4",{id:"🌖-分布式",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#🌖-分布式"},[l("span",null,"🌖 分布式")])],-1),Mt=l("ul",null,[l("li",null,"分布式理论")],-1),Vt=l("ul",null," - CAP - BASE ",-1),At=l("ul",null," - Redis - Memcached - Etcd ",-1),Dt=l("ul",null," - Raft - Paxos - 一致性哈希 ",-1),Lt=l("ul",null,[i(" - 解决方案 "),l("ul",null," - 2PC - 3PC - TCC - 本地消息表 - MQ 事务消息 - 最大努力通知 "),i(" - LCN 分布式事务框架：https://github.com/codingapi/tx-lcn ")],-1),Pt=l("ul",null," - Leaf 分布式 id 生成服务：https://github.com/Meituan-Dianping/Leaf ",-1),It=l("ul",null," - XXL-JOB 调度平台：https://www.xuxueli.com/xxl-job/ - elastic-job：https://gitee.com/elasticjob/elastic-job ",-1),Tt=l("ul",null," - trpc ",-1),Et=l("ul",null," - HDFS - Ceph ",-1),Nt=l("ul",null," - TiDB - OceanBase ",-1),Rt=l("ul",null," - HDFS ",-1),Gt=l("ul",null," - Zookeeper ",-1),qt=l("ul",null," - Prometheus - Zabbix ",-1),zt=l("ul",null," - RabbitMQ - Kafka - Apache Pulsar ",-1),Ht=l("ul",null," - Elastic Stack - Loki ",-1),Qt=l("ul",null," - Elasticsearch ",-1),Ft=l("ul",null," - Apache SkyWalking ",-1),Ot=a('<ul> - Apollo - Nacos </ul><h4 id="🌗-高可用" tabindex="-1"><a class="header-anchor" href="#🌗-高可用"><span>🌗 高可用</span></a></h4><ul><li>限流</li><li>降级熔断</li><li>冷备</li><li>双机热备</li><li>同城双活</li><li>异地双活</li><li>异地多活</li><li>容灾备份</li></ul><h4 id="🌗-高并发" tabindex="-1"><a class="header-anchor" href="#🌗-高并发"><span>🌗 高并发</span></a></h4><ul><li>数据库</li></ul><ul> - 分库分表 <ul> - MyCat 中间件 - Apache ShardingSphere 中间件 </ul> - 读写分离 </ul>',6),Ut=l("ul",null," - 缓存雪崩 - 缓存击穿 - 缓存穿透 ",-1),Kt=l("ul",null," - 负载均衡算法 - 软硬件负载均衡（2、3、4、7 层） ",-1),Wt=l("h4",{id:"🌘-服务网格",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#🌘-服务网格"},[l("span",null,"🌘 服务网格")])],-1),Xt=l("p",null,"服务网格用来描述组成应用程序的微服务网络以及它们之间的交互。服务网格的规模和复杂性不断的增长，它将会变得越来越难以理解和管理，常见的需求包括服务发现、负载均衡、故障恢复、度量和监控等。",-1),Zt=l("ul",null,[l("li",null,"Istio")],-1),Yt=l("ul",null," - 流量管理 - 安全性 - 可观测性 ",-1),$t=a('<ul><li>资料大全：https://www.servicemesher.com/awesome-servicemesh/</li><li>istio 官方文档：https://preliminary.istio.io/latest/zh</li><li>istio 视频教程：https://www.bilibili.com/video/BV1Lf4y1x7j8</li><li>在线体验 istio：https://katacoda.com/courses/istio/</li></ul><h4 id="🌘-ddd-领域驱动设计" tabindex="-1"><a class="header-anchor" href="#🌘-ddd-领域驱动设计"><span>🌘 DDD 领域驱动设计</span></a></h4><p>将数据、业务流程抽象成容易理解的领域模型，通过用代码实现领域模型，来组成完整的业务系统。</p><ul><li>DDD 的优势</li><li>DDD 的适用场景</li><li>DDD 核心概念</li></ul><ul> - 领域模型分类：失血、贫血、充血、涨血 - 子域划分：核心域、通用域、支撑域 - 限界上下文 - 实体和值对象 - 聚合设计 - 领域事件 </ul>',5),le=a('<ul><li>DDD 入门：https://juejin.cn/post/7004002483601145863</li><li>DDD 编码实践：https://juejin.cn/post/6844903903104860174</li><li>DDD 实践教程：https://www.bilibili.com/video/BV1Y341167Xp</li></ul><h4 id="🌘-其他" tabindex="-1"><a class="header-anchor" href="#🌘-其他"><span>🌘 其他</span></a></h4><ul><li>Sidecar</li><li>Serverless</li><li>云原生</li></ul><h4 id="学习建议-25" tabindex="-1"><a class="header-anchor" href="#学习建议-25"><span>学习建议</span></a></h4><p>架构设计的学习没有顶点，多看文章，思考每种设计的优缺点和适用场景，有机会的话在企业中实践即可。</p><p>还在学校、或者初入这行的同学切记，千万不要一味地去背诵架构设计的八股文。你可以背，但是这一块的知识只有结合具体的项目才有意义，所以要多做项目去实践设计的合理性，而不是什么设计都咔咔往系统里去怼。比如面试问到分布式事务，能结合自己项目中用分布式事务解决问题的经验去回答最好。</p><h3 id="🌘-其他技术" tabindex="-1"><a class="header-anchor" href="#🌘-其他技术"><span>🌘 其他技术</span></a></h3><ul><li>热数据探测技术：京东 HotKey</li><li>数据库流水订阅：阿里 Canal</li><li>监控告警</li><li>应用安全</li><li>故障演练</li><li>流量回放</li></ul><h2 id="阶段-7-java-求职" tabindex="-1"><a class="header-anchor" href="#阶段-7-java-求职"><span>阶段 7：Java 求职</span></a></h2><h3 id="目标-6" tabindex="-1"><a class="header-anchor" href="#目标-6"><span>目标</span></a></h3><p>找到好工作</p><h3 id="建议" tabindex="-1"><a class="header-anchor" href="#建议"><span>建议</span></a></h3><ol><li>尽早做规划，可以通过大厂招聘官网的岗位描述来了解岗位的要求</li><li>雕琢一份优秀的简历，推荐阅读：https://mp.weixin.qq.com/s/wfabzdpOPdq89faFFpZ4NA</li><li>多读面经，坚持刷算法</li><li>多参与面试，持续复盘总结</li></ol><h3 id="资源-24" tabindex="-1"><a class="header-anchor" href="#资源-24"><span>资源</span></a></h3><h4 id="校招岗位" tabindex="-1"><a class="header-anchor" href="#校招岗位"><span>校招岗位</span></a></h4><ul><li>⭐ 牛客求职校招版：https://www.nowcoder.com/recommend/campus</li><li>阿里 Java 开发：https://campus.alibaba.com/position.htm?refno=12699</li><li>腾讯后台开发：https://join.qq.com/post_detail.html?pid=1&amp;id=101&amp;tid=2</li><li>腾讯全栈开发：https://join.qq.com/post_detail.html?pid=1&amp;id=137&amp;tid=2</li><li>腾讯运营开发：https://join.qq.com/post_detail.html?pid=1&amp;id=105&amp;tid=2</li><li>美团后端开发：https://campus.meituan.com/jobs?jobFamily=1&amp;jobId=4005&amp;jobType=1&amp;pageNo=2</li><li>华为软件开发：https://career.huawei.com/reccampportal/portal5/campus-recruitment-detail.html?jobId=176044</li></ul><h4 id="社招岗位" tabindex="-1"><a class="header-anchor" href="#社招岗位"><span>社招岗位</span></a></h4><ul><li>⭐ 牛客求职社招版：https://www.nowcoder.com/recommend/fulltime</li><li>阿里社招：https://job.alibaba.com/zhaopin/positionList.htm</li><li>腾讯社招：https://careers.tencent.com/search.html</li></ul><h4 id="实习" tabindex="-1"><a class="header-anchor" href="#实习"><span>实习</span></a></h4><ul><li>⭐ 牛客实习广场：https://nowpick.nowcoder.com/w/intern/center</li><li>实习僧：https://www.shixiseng.com/</li></ul><h4 id="内推" tabindex="-1"><a class="header-anchor" href="#内推"><span>内推</span></a></h4><ul><li>牛客内推：https://www.nowcoder.com/discuss/referral/index</li></ul><h4 id="鱼皮经历" tabindex="-1"><a class="header-anchor" href="#鱼皮经历"><span>鱼皮经历</span></a></h4><ul><li>从 0 开始的编程学习进大厂经历</li></ul><ul> - ⭐ 我学计算机的四年，共勉：https://mp.weixin.qq.com/s/Nc7Ee2UyrPg6hGseQUCzeg </ul>',25),ie=a('<ul> - ⭐ 我的第一份实习：https://mp.weixin.qq.com/s/SwGiRzyTkCOOCUXfXPR1Pw - ⭐ 我的第二份实习，字节跳动：https://mp.weixin.qq.com/s/3q-YIfuZBjPjSnamNwOraw </ul><h4 id="知识总结" tabindex="-1"><a class="header-anchor" href="#知识总结"><span>知识总结</span></a></h4><ul><li>⭐ 牛客 Java 面试宝典：https://www.nowcoder.com/tutorial/94</li><li>⭐ JavaGuide：https://snailclimb.gitee.io/javaguide/#/</li><li>⭐ CS-Notes：http://www.cyc2018.xyz/</li><li>阿里 Java 技术图谱：https://developer.aliyun.com/graph/java</li></ul><h4 id="面经" tabindex="-1"><a class="header-anchor" href="#面经"><span>面经</span></a></h4><ul><li>⭐ 牛客面经：https://www.nowcoder.com/discuss/experience?tagId=639</li><li>秋招总结&amp;Java心得（双非硕士，已拿11+5家Offer）：https://www.nowcoder.com/discuss/327041</li><li>被疫情逼得gap year的完全菜鸡的春招之路。：https://www.nowcoder.com/discuss/427812</li><li>谨以此文纪念2019年春招：https://www.nowcoder.com/discuss/181212</li><li>2019秋招经验谈：https://www.nowcoder.com/discuss/122463</li><li>秋招心得：https://www.nowcoder.com/discuss/317888</li><li>非科班本科菜鸡投的337家(Java后台)：https://www.nowcoder.com/discuss/133333</li><li>2018 这一年：https://www.nowcoder.com/discuss/137593</li><li>双非的秋招，感谢牛客：https://www.nowcoder.com/discuss/142181</li><li>二本本科Java上岸(滴滴京东58)2019秋招心得+面经：https://www.nowcoder.com/discuss/333912</li><li>碎碎念流水账特别长 of 自己的 Java 秋招：https://www.nowcoder.com/discuss/354154</li><li>秋招之路：个人历程以及面经总结：https://www.nowcoder.com/discuss/344311</li><li>【秋招面经总结】菜逼的坎坷之路（JAVA后台研发）：https://www.nowcoder.com/discuss/352030</li><li>阿里11面+EMC+网易+美团面经：https://www.nowcoder.com/discuss/105302</li><li>2018秋招阿里巴巴java笔试试题：https://www.nowcoder.com/discuss/67379</li><li>我的秋招经验分享（已拿BAT头条网易）：https://www.nowcoder.com/discuss/117071</li><li>20届的阿里 头条 网易 滴滴 百度 小米等Java面经：https://www.nowcoder.com/discuss/68289</li><li>拿了5个offer，回馈牛友发一波面经（长文详细）：https://www.nowcoder.com/discuss/79051</li><li>【总结】零基础学习一年拿到BAT三家offer：https://www.nowcoder.com/discuss/188241</li><li>本科生秋招经验总结帖：https://www.nowcoder.com/discuss/296586</li><li>双非渣硕校招总结+Java面经（网易阿里百度等）：https://www.nowcoder.com/discuss/134850</li><li>2018秋招笔试科大讯飞java笔试试题：https://www.nowcoder.com/discuss/67684</li><li>头条后台研发面经（共三面）：https://www.nowcoder.com/discuss/94233</li><li>一点点小经验和几家Java面经：https://www.nowcoder.com/discuss/138434</li><li>感谢牛客网！发一波面经！阿里、网易游戏、京东等offer。：https://www.nowcoder.com/discuss/101712</li><li>非科班水硕的春招实习总结- Java 后台开发：https://www.nowcoder.com/discuss/186528</li><li>十面阿里，七面头条，六个Offer，春招结束：https://www.nowcoder.com/discuss/80156</li><li>成功上岸，最后一波回馈：https://www.nowcoder.com/discuss/176434</li><li>【Java后台开发面经】阿里|网易|头条|腾讯|华为：https://www.nowcoder.com/discuss/108655</li><li>三跨学生的面经（头条、拼多多、华为、vivo）：https://www.nowcoder.com/discuss/195640</li></ul><h4 id="面试题解" tabindex="-1"><a class="header-anchor" href="#面试题解"><span>面试题解</span></a></h4><ul><li>⭐ 2021 最新 Java 笔试、面试题合集：https://pan.baidu.com/s/1DE4HAu-DS80n7VOaGpU_KQ（密码：lkw1）</li><li>牛客网 Java开发校招面试考点汇总（附面试题和答案）：https://www.nowcoder.com/discuss/161991</li><li>50w字+的技术类校招面试题汇总（附答案+考点）：https://www.nowcoder.com/discuss/164726</li><li>硬件，软件（后端开发，算法，数据分析等）历年企业笔试真题汇总：https://www.nowcoder.com/discuss/212783</li></ul><h4 id="视频" tabindex="-1"><a class="header-anchor" href="#视频"><span>视频</span></a></h4><ul><li>⭐ 尚硅谷 2021 逆袭版 Java 面试题第三季：https://www.bilibili.com/video/BV1Hy4y1B78T</li><li>⭐ 阿里大佬透彻讲解 Java 面试 500 道必考题：https://www.bilibili.com/video/BV1yU4y1J7Bb</li></ul><h2 id="阶段-8-持续学习" tabindex="-1"><a class="header-anchor" href="#阶段-8-持续学习"><span>阶段 8：持续学习</span></a></h2><h3 id="目标-7" tabindex="-1"><a class="header-anchor" href="#目标-7"><span>目标</span></a></h3><p>持续追求技术的深度和广度，培养自己的 <strong>核心竞争力</strong> 和 <strong>不可替代性</strong> ，学无止境！</p><h3 id="学习建议-26" tabindex="-1"><a class="header-anchor" href="#学习建议-26"><span>学习建议</span></a></h3><p>自主学习，自主搜索教程，多看书，多阅读技术博客，多实践。</p><h3 id="学习方向" tabindex="-1"><a class="header-anchor" href="#学习方向"><span>学习方向</span></a></h3><h4 id="框架源码" tabindex="-1"><a class="header-anchor" href="#框架源码"><span>框架源码</span></a></h4><ul><li>Spring</li><li>SpringBoot</li><li>SpringMVC</li><li>MyBatis</li><li>Netty</li><li>Dubbo</li><li>SpringCloud</li></ul><h4 id="计算机原理" tabindex="-1"><a class="header-anchor" href="#计算机原理"><span>计算机原理</span></a></h4><ul><li>《算法导论》：https://www.bilibili.com/video/av48922404</li><li>《现代操作系统》：https://www.bilibili.com/video/av9555596</li><li>《深入理解计算机系统》：https://www.bilibili.com/video/av31289365</li><li>《编译原理》： https://www.bilibili.com/video/av17649289</li><li>《计算机网络：自顶向下方法》：https://www.bilibili.com/video/BV1JV411t7ow</li><li>《计算机程序的构造和解释》：https://www.bilibili.com/video/av8515129</li><li>《数据库系统概论》：https://www.bilibili.com/video/BV1G54y1d7ZK</li></ul><h4 id="数据库-中间件-分布式" tabindex="-1"><a class="header-anchor" href="#数据库-中间件-分布式"><span>数据库 / 中间件 / 分布式</span></a></h4><ul><li>数据库</li></ul><ul> - MySQL - PostgreSQL </ul>',22),ae=l("ul",null," - Redis ",-1),te=l("ul",null," - Apache Kafka - Apache Pulsar ",-1),ee=l("ul",null,[i(" - Elastic Stack "),l("ul",null," - Elasticsearch - logstash - kibana - beats ")],-1),se=a('<ul> - Docker - K8S </ul><h4 id="解决方案" tabindex="-1"><a class="header-anchor" href="#解决方案"><span>解决方案</span></a></h4><ul><li>广告系统</li><li>电商系统</li><li>搜索系统</li><li>支付转账</li><li>游戏后台</li><li>即时通讯</li><li>社交系统</li><li>CMS 系统</li><li>ERP 系统</li><li>OA 系统</li><li>代码生成</li><li>权限管理</li><li>秒杀活动</li></ul><h4 id="架构设计-1" tabindex="-1"><a class="header-anchor" href="#架构设计-1"><span>架构设计</span></a></h4><p>同阶段 6 架构设计部分</p><h4 id="大数据" tabindex="-1"><a class="header-anchor" href="#大数据"><span>大数据</span></a></h4><ul><li>5V 特点</li><li>Hadoop</li><li>HDFS</li><li>MapReduce</li><li>Spark</li><li>Flink</li><li>Storm</li><li>Hive</li><li>HBase</li><li>Druid</li><li>Kylin</li><li>Pig</li><li>Mahout</li></ul><h4 id="前沿技术" tabindex="-1"><a class="header-anchor" href="#前沿技术"><span>前沿技术</span></a></h4><ul><li>云原生：https://www.jianshu.com/p/a37baa7c3eff</li></ul><ul> - Quasar Framework：http://www.quasarchs.com/ </ul>',10),ne=l("ul",null," - istio：https://github.com/istio/istio ",-1),oe=l("ul",null," - 官网：https://www.graalvm.org/ ",-1),he=a('<ul> - 官网：http://openjdk.java.net/projects/zgc/ </ul><h3 id="自学-java-专题资源" tabindex="-1"><a class="header-anchor" href="#自学-java-专题资源"><span>自学 Java 专题资源</span></a></h3><ul><li>⭐ GitHub Java 专区：https://github.com/topics/java</li><li>⭐ GitHub Java 合集：https://github.com/akullpp/awesome-java</li><li>StackOverflow：https://stackoverflow.com/questions/tagged/java（解决问题必备）</li><li>⭐ 掘金 Java 专区：https://juejin.cn/tag/Java</li><li>美团技术团队：https://tech.meituan.com/</li><li>阿里技术团队：https://102.alibaba.com/tech/list/</li><li>有赞技术团队：https://tech.youzan.com/tag/back-end/</li></ul><h2 id="附录" tabindex="-1"><a class="header-anchor" href="#附录"><span>附录</span></a></h2><h3 id="程序员重要能力" tabindex="-1"><a class="header-anchor" href="#程序员重要能力"><span>程序员重要能力</span></a></h3><p>想成为大佬，就是要通过学习和积累，提升自己的各方面能力，比较抽象，共勉！</p><ol><li>团队协作能力</li><li>高效沟通能力</li><li>需求分析能力</li><li>架构设计能力</li><li>抽象复用能力</li><li>独立创造能力</li><li>问题解决能力</li><li>归纳总结能力</li><li>自主学习能力</li><li>工具利用能力</li><li>高效编码能力</li><li>信息检索能力</li><li>开源建设能力</li><li>源码阅读能力</li><li>自测审查能力</li><li>文档编写能力</li><li>知识表达能力</li><li>绘图描述能力</li><li>兴趣驱动（长期学习能力）</li><li>保持好奇心</li><li>其他（狗头）</li></ol><ul> 21. 复制粘贴能力 21. 打架能力 21. PPT 制作能力 </ul><h3 id="编程误区" tabindex="-1"><a class="header-anchor" href="#编程误区"><span>编程误区</span></a></h3><ol><li>我不适合学编程？❌（兴趣比天赋更重要，不要怀疑自己）</li><li>忽视基础，急于求成 ❌（勿以浮沙筑高台）</li><li>数学、英语差，就学不好编程 ❌（开发工作基本不用高等数学，英语可以使用翻译软件、工作中提升）</li><li>编程时，刻意记忆代码 ❌（知道每行代码的意义，能看文档写出来就行）</li><li>每行代码都要追求完美 ❌（何为完美？每个人的定义不同）</li><li>用百度搜索、复制粘贴的都是菜鸡程序员 ❌（艹）</li><li>我做的项目太小了，就不整理了 ❌（自己的每个项目都要整理，可以记录自己的成长）</li><li>跟别人交流很麻烦，我更愿意自己写代码 ❌（1 + 1 &gt; 2，切勿闭门造车，不过也要找到合适的同学去交流）</li><li>做别人做过的项目没有意义 ❌（连别人做过的项目都做不出，还想造新轮子？）</li><li>遇到 Bug，想办法绕过而不是寻找解决方案 ❌（Bug 最能使人成长）</li><li>遇到问题，第一时间去问别人而非自己解决 ❌（建议阅读《提问的智慧》）</li><li>花了很多时间、看了很多书，就能学好编程 ❌（编程最忌讳纸上谈兵）</li><li>只向前学习，不整理学过的知识 ❌（建议每学完一个知识，都去回想、总结、写心得，这个时间的花费是值得的）</li><li>单元测试不重要 ❌（一棍打死）</li><li>写文档不重要 ❌（一棍打死）</li><li>和我无关的工作，就不需要了解 ❌（了解团队、同行是很重要的，全局视野）</li><li>收藏的资源从来不看，就不收藏了 ❌（万一以后用到了呢？）</li><li>不去考虑需求的价值，而是一味寻求解决方案 ❌（不要成为需求机器，要有自己的独立思考）</li></ol><h3 id="高效法则" tabindex="-1"><a class="header-anchor" href="#高效法则"><span>高效法则</span></a></h3><ol><li>不要过分追求完美，完成比完美更重要。</li><li>有现成的代码，就不要自己写，避免重复劳动（学习除外）。</li><li>学会使用软件及快捷键来提升自己的编码效率。</li><li>做项目前，要先想清楚怎么做，做好充分的预研和设计。这样不仅便于后续的程序扩展，也能避免无意义的返工。</li><li>将大的目标进行拆解，做好计划，分清主次。不要因为觉得目标遥不可及而拖延，也不要盲目乐观而松懈。</li><li>养成好的作息习惯，找到自己适合工作的黄金时间。</li><li>记性不好，就多记录、多总结、定期复习。哪怕实在记不住，也可以借助文档、收藏夹软件来当自己的第二大脑。</li><li>积累属于自己的工具库，配合搜索软件实现随用随取。</li><li>多和其他同行交流或订阅技术推送，拓宽知识渠道，从而了解更多的工具和方法。有些东西你只要听说过，要用时也许就能节省大量查找时间。</li><li>找到让自己进入专注做事的状态的方法，比如戴上耳机、嚼口香糖等。</li><li>做事高效，离不开经验的积累，因此要多写代码、多做项目。</li></ol><h3 id="常见问题" tabindex="-1"><a class="header-anchor" href="#常见问题"><span>常见问题</span></a></h3><ol><li>按照这份路线学习，每天要学多少个小时，总共要学多久？ 回答：每个人学习能力不同，当然没有固定标准。我当时平均每天可以学习 6 个小时，寒暑假能保证 8 小时以上的学习，路线中的时长是我当时学习时长 * 1.5 倍的参考值。实话说，我的学习效率真的不高，对编程感兴趣，多学就好了。与其纠结这个时长，倒不妨多抽点时间，每天多学一点。</li><li>这份路线上推荐的资源，鱼皮都看完了么？ 回答：我是特么神仙啊？怎么可能都看完了！这份路线的本质是以网上现有的、死板的 Java 大学习框架为基础，结合我自己实际学习的知识、经验和感悟给它注入灵魂，从而希望给大家带来更大的帮助和价值。路线中的资源都是利用我自己的资源检索能力和渠道，通过试看、反复对比和参考评价精选出来的，不是主观臆断、空穴来风。</li><li>我学到这份路线的哪个位置，可以找工作？ 回答：这和你自己的领悟能力和教育背景有关。夸张点说，有些清华大学的同学，可能之前都没学过 Java，照样能找到大厂 Java 开发工作。学到同一阶段的同学，学习过程中的认真程度、积累总结数、做项目个数、基础学习的好坏不同，找到的工作肯定也不同。但一般情况下，想要进大厂，建议至少学完阶段 4 的微服务部分，然后去做一个完整的项目，用上之前学习的技术；不想进大厂的同学，学完第 3 阶段后，学下缓存和队列，一般也能找到 Java 开发的工作。</li><li>学完这份路线就能进大厂么？ 回答：你先学完，再问这个问题。没有绝对进大厂的保证，但是相信我，把这份路线上的大部分知识学了，再做做项目，哪怕进不了大厂，你拿到的薪水也绝对比松散学习的同学高！</li><li>我可以相信你么？ 回答：不要相信我，应该相信你自己。想进大厂，就不要怀疑自己的能力！</li></ol><h2 id="写在最后" tabindex="-1"><a class="header-anchor" href="#写在最后"><span>写在最后</span></a></h2><p>觉得看文字累的朋友，欢迎看下视频版，带大家导读一下：https://www.bilibili.com/video/BV1Qf4y1K7ff/</p><p>以上就是鱼皮熬了几天大夜、结合个人经验、并且参考了大量网上的文章和评论总结而成的学习路线，真的是非常不容易，如果大家觉得满意请务必 <strong>三连</strong> 支持下。</p><p>我是鱼皮，持续分享编程干货的程序员，欢迎关注，下期再见~</p>',18);function ce(pe,ue){return s(),e("div",null,[h,i(" 3. 准备一款记笔记的软件，学编程的过程中老师的思路、自己遇到的问题、解决问题的方法、心得感悟、遇到的好资料，都要记下来哦，好记性不如烂笔头，可以帮助你事半功倍。 "),c,i(" 6. 想学好编程，别背代码，要多写，把这句话刻到脑子里。 7. 选视频和找资料的小技巧：多看评论区、多看隔壁评论区、不要看过期的视频。 8. 如何访问 GitHub：https://mp.weixin.qq.com/s/uBFsuThsZ4kdkZgqfX12qA（上面有很多免费的编程学习资源、项目源码，程序员必备） "),p,i(" - **Java 基础语法** "),u,i(" - 数组 - **面向对象** "),r,i(" - 抽象类 - 接口 - 枚举 - 常用类 "),d,i(" - 集合类 - 泛型 - 注解 - 异常处理 - 多线程 - IO 流 - 反射 "),b,i(" - 文档 "),g,i(" - 书籍 "),m,i(" - 在线游戏 "),w,i(" - 文档 "),_,i(" - 书籍 "),v,i(" - 工具 "),f,i(" - 其他 "),x,i(" - 练习 "),j,J,S,y,k,i(" - 算法 "),B,i(" - 在线教程 "),C,i(" - 在线刷题 "),M,i(" - 书籍 "),V,i(" - 视频 "),A,i(" - 工具 "),D,i(" - 网站 "),L,i(" - 书籍 "),P,i(" - 书籍 "),I,i(" - 大学课件 "),T,i(" - 书籍 "),E,i(" - 大学课件 "),N,i(" - 在线练习 "),R,i(" - 文档 "),G,i(" - 网站 "),q,i(" - 代码校验（CheckStyle） - 提交规范 "),z,H,Q,F,O,U,i(" - 视频 "),K,i(" - 文档 "),W,i(" - 书籍 "),X,i(" - 文档 "),Z,i(" - 游戏 "),Y,i(" - 书籍 "),$,i(" - 文档 "),ll,i(" - 实战 "),il,i(" - 社区 "),al,i(" - 工具 "),tl,i(" - Vue "),el,i(" - 软件过程模型 - 敏捷开发 - 软件开发模型 - 需求建模 - 软件设计 - UML - 体系结构设计 - 设计模式 - 软件质量管理 - 评审 - 软件质量保证 - 软件测试 "),sl,i(" - 软件配置管理 - 软件项目管理 - 软件项目估算 - 项目进度安排 - 风险管理 - 软件过程改进 "),nl,ol,hl,cl,pl,ul,i(" - 视频 "),rl,i(" - 大学课件 "),dl,bl,gl,ml,wl,_l,vl,i(" - 结构型模式：把类或对象结合在一起形成一个更大的结构 "),fl,i(" - 行为型模式：类和对象如何交互，及划分责任和算法 "),xl,i(" - 视频 "),jl,i(" - 文档 "),Jl,Sl,yl,kl,Bl,Cl,i(" - 多级缓存 - Redis 分布式缓存 "),Ml,i(" - 缓存（Redis）应用场景 "),Vl,i(" - 缓存常见问题 "),Al,i(" - 相关技术：Memcached、Ehcache "),Dl,i(" - 文档 "),Ll,i(" - 书籍 "),Pl,i(" - 工具 "),Il,Tl,El,Nl,Rl,Gl,i(" - 相关技术：Kafka、ActiveMQ、TubeMQ、RocketMQ "),ql,i(" - 文档 "),zl,i(" - 书籍 "),Hl,i(" - 工具 "),Ql,i(" - 文档 "),Fl,i(" - 工具 "),Ol,i(" - 文档 "),Ul,i(" - 书籍 "),Kl,i(" - Spring Cloud Alibaba "),Wl,i(" - 文档 "),Xl,Zl,Yl,$l,li,ii,ai,i(" - 🌘 K8S（Kubernetes） "),ti,i(" - 相关技术：Apache Mesos、Mesosphere "),ei,i(" - 书籍 "),si,i(" - 文档 "),ni,i(" - 网站 "),oi,i(" - 镜像源 "),hi,i(" - 文档 "),ci,i(" - 实战平台 "),pi,i(" - Chinese Language Pack "),ui,i(" - Translation "),ri,i(" - Key Promoter X "),di,i(" - Rainbow Brackets "),bi,i(" - CodeGlance "),gi,i(" - WakaTime "),mi,i(" - Statistic "),wi,_i,vi,fi,xi,i(" - Tabnine AI Code Completion "),ji,i(" - GsonFormatPlus "),Ji,i(" - JUnitGenerator V2.0 "),Si,i(" - RestfulTool "),yi,i(" - SequenceDiagram "),ki,i(" - CheckStyle-IDEA "),Bi,i(" - Alibaba Java Coding Guidelines "),Ci,i(" - SonarLint "),Mi,i(" - MybatisX "),Vi,Ai,Di,Li,i(" - Chinese Language Pack "),Pi,i(" - Grep Console "),Ii,i(" - Material Theme UI "),Ti,i(" - Nyan Progress Bar "),Ei,i(" - activate-power-mode "),Ni,i(" - Power Mode II "),Ri,i(" - Rainbow Brackets "),Gi,i(" - Background Image Plus + "),qi,zi,Hi,Qi,i(" - Tabnine AI Code Completion "),Fi,i(" - UUID Generator "),Oi,i(" - Randomness "),Ui,i(" - .ignore "),Ki,i(" - Auto filling Java call arguments "),Wi,i(" - GenerateAllSetter "),Xi,i(" - GenerateSerialVersionUID "),Zi,i(" - GsonFormatPlus "),Yi,i(" - Lombok "),$i,i(" - Easy Code "),la,i(" - Easy Javadoc "),ia,i(" - JavaDoc "),aa,i(" - Json2Pojo "),ta,i(" - JUnitGenerator V2.0 "),ea,i(" - Jindent - Source Code Formatter "),sa,i(" - MybatisX "),na,i(" - MyBatisCodeHelperPro "),oa,ha,ca,pa,i(" - Jump to Line "),ua,i(" - SequenceDiagram "),ra,i(" - jclasslib Bytecode Viewer "),da,i(" - BrowseWordAtCaret "),ba,i(" - CodeGlance "),ga,ma,wa,i(" - Alibaba Java Coding Guidelines "),_a,i(" - SonarLint "),va,i(" - FindBugs-IDEA "),fa,i(" - MetricsReloaded "),xa,ja,Ja,i(" - Json Parser "),Sa,i(" - Properties to YAML Converter "),ya,i(" - String Manipulation "),ka,Ba,Ca,i(" - Statistic "),Ma,Va,Aa,i(" - CodeSearch "),Da,La,Pa,i(" - File Watchers "),Ia,i(" - PlantUML integration "),Ta,i(" - Bytecode Editor "),Ea,i(" - Alibaba Cloud Toolkit "),Na,i(" - Tencent Cloud Toolkit "),Ra,i(" - EduTools "),Ga,i(" - IDE Features Trainer "),qa,i(" - JRebel Plugin "),za,i(" - Key Promoter X "),Ha,i(" - Translation "),Qa,i(" - idea_seat "),Fa,i(" - RestfulTool "),Oa,i(" - Multirun "),Ua,Ka,Wa,Xa,i(" - MyBatis Log Plugin "),Za,i(" - Maven Helper "),Ya,i(" - Gradle View "),$a,i(" - Arthas Idea "),lt,i(" - GitToolBox "),it,i(" - BashSupport "),at,i(" - Git Flow Integration "),tt,i(" - Gitee "),et,i(" - Drools "),st,i(" - EnvFile "),nt,i(" - Kubernetes "),ot,i(" - Vue.js "),ht,i(" - Scala "),ct,i(" - Zookeeper "),pt,i(" - Jms messenger "),ut,i(" - MapStruct Support "),rt,i(" - Big Data Tools "),dt,i(" - CSV "),bt,i(" - Ideolog "),gt,i(" - Toml "),mt,i(" - .env files support "),wt,i(" - 书籍 "),_t,i(" - 项目 "),vt,i(" - 垃圾回收 "),ft,i(" - 字节码 - 内存分配和回收 - JVM 性能调优 "),xt,i(" - Java 探针 - 线上故障分析 "),jt,i(" - 书籍 "),Jt,i(" - 项目 "),St,i(" - 实战 "),yt,i(" - 工具 "),kt,Bt,Ct,Mt,Vt,i(" - 分布式缓存 "),At,i(" - 一致性算法 "),Dt,i(" - 分布式事务 "),Lt,i(" - 分布式 id 生成 "),Pt,i(" - 分布式任务调度 "),It,i(" - 分布式服务调用 "),Tt,i(" - 分布式存储 "),Et,i(" - 分布式数据库 "),Nt,i(" - 分布式文件系统 "),Rt,i(" - 分布式协调 "),Gt,i(" - 分布式监控 "),qt,i(" - 分布式消息队列 "),zt,i(" - 分布式日志收集 "),Ht,i(" - 分布式搜索引擎 "),Qt,i(" - 分布式链路追踪 "),Ft,i(" - 分布式配置中心 "),Ot,i(" - 缓存 "),Ut,i(" - 负载均衡 "),Kt,Wt,Xt,Zt,Yt,i(" - Envoy（开源的边缘和服务代理） "),$t,i(" - DDD 实践 "),le,i(" - 实习经历 "),ie,i(" - 缓存 "),ae,i(" - 队列 "),te,i(" - 搜索引擎 "),ee,i(" - 容器 "),se,i(" - 服务网格：https://www.redhat.com/zh/topics/microservices/what-is-a-service-mesh "),ne,i(" - GraalVM：https://juejin.cn/post/6850418120570437646（高性能的通用虚拟机） "),oe,i(" - ZGC：https://juejin.cn/post/6859276583656980493（新一代垃圾回收器） "),he])}const be=t(o,[["render",ce],["__file","Java学习路线.html.vue"]]),ge=JSON.parse('{"path":"/%E6%8A%80%E6%9C%AF%E6%96%87%E7%AB%A0/Java/Java%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF.html","title":"Java学习路线","lang":"zh-CN","frontmatter":{"category":["技术文章"],"tag":["Java","学习路线"],"star":2},"headers":[{"level":2,"title":"大纲","slug":"大纲","link":"#大纲","children":[]},{"level":2,"title":"符号表","slug":"符号表","link":"#符号表","children":[]},{"level":2,"title":"写在开头","slug":"写在开头","link":"#写在开头","children":[]},{"level":2,"title":"阶段 0：前期准备","slug":"阶段-0-前期准备","link":"#阶段-0-前期准备","children":[]},{"level":2,"title":"阶段 1：Java 入门","slug":"阶段-1-java-入门","link":"#阶段-1-java-入门","children":[{"level":3,"title":"目标","slug":"目标","link":"#目标","children":[]},{"level":3,"title":"🌕 Java 编程基础（45 天）","slug":"🌕-java-编程基础-45-天","link":"#🌕-java-编程基础-45-天","children":[]},{"level":3,"title":"🌖 Java 8（3 天）","slug":"🌖-java-8-3-天","link":"#🌖-java-8-3-天","children":[]},{"level":3,"title":"练手项目","slug":"练手项目","link":"#练手项目","children":[]},{"level":3,"title":"尾声","slug":"尾声","link":"#尾声","children":[]}]},{"level":2,"title":"阶段 2：巩固基础","slug":"阶段-2-巩固基础","link":"#阶段-2-巩固基础","children":[{"level":3,"title":"目标","slug":"目标-1","link":"#目标-1","children":[]},{"level":3,"title":"Java 基础（30 天）","slug":"java-基础-30-天","link":"#java-基础-30-天","children":[]},{"level":3,"title":"🌖 数据结构与算法","slug":"🌖-数据结构与算法","link":"#🌖-数据结构与算法","children":[]},{"level":3,"title":"🌘 计算机导论","slug":"🌘-计算机导论","link":"#🌘-计算机导论","children":[]},{"level":3,"title":"🌖 操作系统","slug":"🌖-操作系统","link":"#🌖-操作系统","children":[]},{"level":3,"title":"🌖 计算机网络","slug":"🌖-计算机网络","link":"#🌖-计算机网络","children":[]},{"level":3,"title":"尾声","slug":"尾声-1","link":"#尾声-1","children":[]}]},{"level":2,"title":"阶段 3：Java 企业开发基础","slug":"阶段-3-java-企业开发基础","link":"#阶段-3-java-企业开发基础","children":[{"level":3,"title":"目标","slug":"目标-2","link":"#目标-2","children":[]},{"level":3,"title":"🌕 MySQL 数据库（7 天）","slug":"🌕-mysql-数据库-7-天","link":"#🌕-mysql-数据库-7-天","children":[]},{"level":3,"title":"🌕 开发框架（60 天）","slug":"🌕-开发框架-60-天","link":"#🌕-开发框架-60-天","children":[]},{"level":3,"title":"🌘 开发规范（3 天）","slug":"🌘-开发规范-3-天","link":"#🌘-开发规范-3-天","children":[]},{"level":3,"title":"🌕 Git（3 天）","slug":"🌕-git-3-天","link":"#🌕-git-3-天","children":[]},{"level":3,"title":"🌖 Linux（10 天）","slug":"🌖-linux-10-天","link":"#🌖-linux-10-天","children":[]},{"level":3,"title":"🌘 前端基础（14 天）","slug":"🌘-前端基础-14-天","link":"#🌘-前端基础-14-天","children":[]},{"level":3,"title":"练手项目","slug":"练手项目-1","link":"#练手项目-1","children":[]},{"level":3,"title":"尾声","slug":"尾声-2","link":"#尾声-2","children":[]}]},{"level":2,"title":"阶段 4：Java 企业开发进阶","slug":"阶段-4-java-企业开发进阶","link":"#阶段-4-java-企业开发进阶","children":[{"level":3,"title":"目标","slug":"目标-3","link":"#目标-3","children":[]},{"level":3,"title":"🌘 软件工程","slug":"🌘-软件工程","link":"#🌘-软件工程","children":[]},{"level":3,"title":"🌖 设计模式（21 天）","slug":"🌖-设计模式-21-天","link":"#🌖-设计模式-21-天","children":[]},{"level":3,"title":"🌕 缓存（14 天）","slug":"🌕-缓存-14-天","link":"#🌕-缓存-14-天","children":[]},{"level":3,"title":"🌖 消息队列（14 天）","slug":"🌖-消息队列-14-天","link":"#🌖-消息队列-14-天","children":[]},{"level":3,"title":"🌖 Nginx（14 天）","slug":"🌖-nginx-14-天","link":"#🌖-nginx-14-天","children":[]},{"level":3,"title":"🌗 Netty 网络编程（21 天）","slug":"🌗-netty-网络编程-21-天","link":"#🌗-netty-网络编程-21-天","children":[]},{"level":3,"title":"🌖 微服务（60 天）","slug":"🌖-微服务-60-天","link":"#🌖-微服务-60-天","children":[]},{"level":3,"title":"🌖 容器（7 天）","slug":"🌖-容器-7-天","link":"#🌖-容器-7-天","children":[]},{"level":3,"title":"🌗 CI / CD（3 天）","slug":"🌗-ci-cd-3-天","link":"#🌗-ci-cd-3-天","children":[]},{"level":3,"title":"练手项目","slug":"练手项目-2","link":"#练手项目-2","children":[]},{"level":3,"title":"尾声","slug":"尾声-3","link":"#尾声-3","children":[]}]},{"level":2,"title":"阶段 5：项目实战","slug":"阶段-5-项目实战","link":"#阶段-5-项目实战","children":[{"level":3,"title":"目标","slug":"目标-4","link":"#目标-4","children":[]},{"level":3,"title":"学习建议","slug":"学习建议-22","link":"#学习建议-22","children":[]},{"level":3,"title":"视频教程","slug":"视频教程","link":"#视频教程","children":[]},{"level":3,"title":"常用类库","slug":"常用类库","link":"#常用类库","children":[]},{"level":3,"title":"IDEA 插件","slug":"idea-插件","link":"#idea-插件","children":[]},{"level":3,"title":"常用软件","slug":"常用软件","link":"#常用软件","children":[]},{"level":3,"title":"项目源码（50 套）","slug":"项目源码-50-套","link":"#项目源码-50-套","children":[]}]},{"level":2,"title":"阶段 6：Java 高级","slug":"阶段-6-java-高级","link":"#阶段-6-java-高级","children":[{"level":3,"title":"目标","slug":"目标-5","link":"#目标-5","children":[]},{"level":3,"title":"🌖 并发编程（21 天）","slug":"🌖-并发编程-21-天","link":"#🌖-并发编程-21-天","children":[]},{"level":3,"title":"🌖 JVM（30 天）","slug":"🌖-jvm-30-天","link":"#🌖-jvm-30-天","children":[]},{"level":3,"title":"架构设计","slug":"架构设计","link":"#架构设计","children":[]},{"level":3,"title":"🌘 其他技术","slug":"🌘-其他技术","link":"#🌘-其他技术","children":[]}]},{"level":2,"title":"阶段 7：Java 求职","slug":"阶段-7-java-求职","link":"#阶段-7-java-求职","children":[{"level":3,"title":"目标","slug":"目标-6","link":"#目标-6","children":[]},{"level":3,"title":"建议","slug":"建议","link":"#建议","children":[]},{"level":3,"title":"资源","slug":"资源-24","link":"#资源-24","children":[]}]},{"level":2,"title":"阶段 8：持续学习","slug":"阶段-8-持续学习","link":"#阶段-8-持续学习","children":[{"level":3,"title":"目标","slug":"目标-7","link":"#目标-7","children":[]},{"level":3,"title":"学习建议","slug":"学习建议-26","link":"#学习建议-26","children":[]},{"level":3,"title":"学习方向","slug":"学习方向","link":"#学习方向","children":[]},{"level":3,"title":"自学 Java 专题资源","slug":"自学-java-专题资源","link":"#自学-java-专题资源","children":[]}]},{"level":2,"title":"附录","slug":"附录","link":"#附录","children":[{"level":3,"title":"程序员重要能力","slug":"程序员重要能力","link":"#程序员重要能力","children":[]},{"level":3,"title":"编程误区","slug":"编程误区","link":"#编程误区","children":[]},{"level":3,"title":"高效法则","slug":"高效法则","link":"#高效法则","children":[]},{"level":3,"title":"常见问题","slug":"常见问题","link":"#常见问题","children":[]}]},{"level":2,"title":"写在最后","slug":"写在最后","link":"#写在最后","children":[]}],"git":{"createdTime":1717576218000,"updatedTime":1724210443000,"contributors":[{"name":"Vinci","email":"1341060890@qq.com","commits":1}]},"readingTime":{"minutes":70.53,"words":21160},"filePathRelative":"技术文章/Java/Java学习路线.md","localizedDate":"2024年6月5日","excerpt":"\\n<div class=\\"hint-container note\\">\\n<p class=\\"hint-container-title\\">注</p>\\n<p>Java 学习路线一条龙版 by 程序员鱼皮 为方便查看转载，若有侵权请联系本人删除。</p>\\n</div>\\n<p>转自鱼皮 💂 + 💻 = 👴🏽</p>\\n<p>建议先观看视频导读：https://www.bilibili.com/video/BV1Qf4y1K7ff/</p>\\n<h2>大纲</h2>\\n<p>路线特点</p>\\n<ol>\\n<li>最新，完整一条龙的大厂 Java 学习路线，从入门到入土</li>\\n<li>同时适用于想全面学习 / 快速求职的同学，可以根据符号来定制自己的专属学习路线</li>\\n<li>给出目标、学习建议、关键知识点、最优资源以及各类资源推荐（视频、书籍、文档、项目、工具等）</li>\\n<li>鱼皮自己是 Java 开发者，融入个人自学和从业的经历 + 思考，让路线有灵魂</li>\\n<li>划分阶段、更有计划，且在最后给出持续学习的方向、探索 Java 程序员发展的无限可能</li>\\n<li>完全开源，回馈社区，持续更新！</li>\\n</ol>"}');export{be as comp,ge as data};
